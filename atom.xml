<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhenv5</title>
  <subtitle>Show me your code</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhenv5.github.io/"/>
  <updated>2016-12-05T19:27:16.000Z</updated>
  <id>http://zhenv5.github.io/</id>
  
  <author>
    <name>zhenv5</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://zhenv5.github.io/2016/12/05/Linear_Algebra/Linear%20Algebra%20:%20Eigenvalues%20and%20Eigenvectors/"/>
    <id>http://zhenv5.github.io/2016/12/05/Linear_Algebra/Linear Algebra : Eigenvalues and Eigenvectors/</id>
    <published>2016-12-05T19:29:05.334Z</published>
    <updated>2016-12-05T19:27:16.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Linear-Algebra-Eigenvalues-and-Eigenvectors&quot;&gt;&lt;a href=&quot;#Linear-Algebra-Eigenvalues-and-Eigenvectors&quot; class=&quot;headerlink&quot; title=&quot;Linear Algebra : Eigenvalues and Eigenvectors&quot;&gt;&lt;/a&gt;Linear Algebra : Eigenvalues and Eigenvectors&lt;/h4&gt;&lt;p&gt;@(Algebra)&lt;/p&gt;
&lt;h4 id=&quot;Trace-and-determinant&quot;&gt;&lt;a href=&quot;#Trace-and-determinant&quot; class=&quot;headerlink&quot; title=&quot;Trace and determinant&quot;&gt;&lt;/a&gt;Trace and determinant&lt;/h4&gt;&lt;p&gt;A square matrix $A$ is called invertible if there is a square matrix $B$ of the same size such that $AB = BA = I$, we call $B$ an inverse of $A$.&lt;/p&gt;
&lt;p&gt;An inverse is unique.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;term &lt;em&gt;nonsingular&lt;/em&gt; which means the same as invertible, and &lt;em&gt;singular&lt;/em&gt;, which means the same as noninvertible. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Eigenvalues-and-eigenvectors&quot;&gt;&lt;a href=&quot;#Eigenvalues-and-eigenvectors&quot; class=&quot;headerlink&quot; title=&quot;Eigenvalues and eigenvectors&quot;&gt;&lt;/a&gt;Eigenvalues and eigenvectors&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;an eigenvector $x$ lies along the same line as $Ax$: $Ax = \lambda x$, The eigenvalue is $\lambda$&lt;/li&gt;
&lt;li&gt;if $Ax = \lambda x$, then $A^2x = \lambda ^2 x$ and $A^{-1}x = \lambda ^ {-1} x$, and $(A+cI)x = (\lambda + c) x$&lt;/li&gt;
&lt;li&gt;if $Ax = \lambda x$, then $(A - \lambda I)x = 0$, and $A - \lambda I$ is singular and $det(A - \lambda I) = 0$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To explain eigenvalues, we first explain eigenvectors. Almost all vectors change direction, when they are multiplied by $A$. &lt;strong&gt;Certain exceptional vector x are in the same direction as &lt;/strong&gt; $Ax$, which are called eigenvectors. &lt;/p&gt;
&lt;p&gt;$$Ax = \lambda x$$&lt;/p&gt;
&lt;p&gt;$$A^nx = \lambda ^ n x$$&lt;/p&gt;
&lt;p&gt;$$(A - \lambda I) x = 0$$&lt;/p&gt;
&lt;p&gt;To solve the eigenvalue problem for an $n$ by $n$ matrix, follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compute the determinant of $A - \lambda I$, which is a polynomial in $\lambda$ of degree $n$&lt;/li&gt;
&lt;li&gt;Find the root of of this polynomial, by solving $det(A - \lambda I) = 0$. The $n$ roots are the $n$ eigenvalues of $A$. They make $A - \lambda I$ singular&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For each eigenvalue $\lambda$, solve $(A - \lambda I)x = 0$ to find eigenvector $x$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The product of the $n$ eigenvalues equals the determinant. The sum of the $n$ eigenvalues equals the sum of the $n$ diagonal entries. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The sum of the entries along the main diagonal is called the &lt;em&gt;trace&lt;/em&gt; of A:&lt;/p&gt;
&lt;p&gt;$$\lambda_1 + \lambda_2 + … + \lambda&lt;em&gt;n = trace = a&lt;/em&gt;{11} + a&lt;em&gt;{22} + … + a&lt;/em&gt;{nn}$$&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./Screenshot from 2016-10-24 10-41-49.png&quot; alt=&quot;Rotation_Matrix&quot;&gt;&lt;/p&gt;
&lt;p&gt;Matrices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Symmetric matrix: $S^T = S$&lt;/li&gt;
&lt;li&gt;Skew-symmetric: $S^T = -S$&lt;/li&gt;
&lt;li&gt;Orthogonal matrix: $Q^TQ = I$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The eigenvectors for all these special matrices are perpendicular &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A and B share the same n independent eigenvectors if and only if $AB = BA$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The eigenvalue of $A^2$ and $A^{-1}$ are $\lambda^2$ and $\lambda^{-1}$, with the same eigenvectors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Power-method-for-approximating-eigenvalues&quot;&gt;&lt;a href=&quot;#Power-method-for-approximating-eigenvalues&quot; class=&quot;headerlink&quot; title=&quot;Power method for approximating eigenvalues&quot;&gt;&lt;/a&gt;Power method for approximating eigenvalues&lt;/h4&gt;&lt;p&gt;Definition of Dominant Eigenvalue and Dominant Eigenvector: Let $\lambda_1$, $\lambda_2$,…, and $\lambda_n$ be the eigenvalues of $n$ x $n$ matrix $A$. $\lambda_1$ is called the dominant eigenvalue of $A$ if $|\lambda_1| &amp;gt; |\lambda_i|$, $i = 2,…,n$.&lt;/p&gt;
&lt;p&gt;The eigenvectors corresponding to $\lambda_1$ are called dominant eigenvectors of $A$.&lt;/p&gt;
&lt;p&gt;Not every matrix has a dominant eigenvalue. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Determining a Eigenvalue from an eigenvector&lt;/strong&gt;: if $x$ is an eigenvector of a matrix $A$, then its corresponding eigenvalue is given by:&lt;/p&gt;
&lt;p&gt;$$\lambda = \frac{Ax \cdot x}{x \cdot x}$$&lt;/p&gt;
&lt;p&gt;Since $x$ is an eigenvector of $A$, $Ax = \lambda x$:&lt;/p&gt;
&lt;p&gt;$$\frac{Ax \cdot x}{x \cdot x} = \frac{\lambda x \cdot x}{x \cdot x} = \lambda$$&lt;/p&gt;
&lt;h5 id=&quot;The-power-method&quot;&gt;&lt;a href=&quot;#The-power-method&quot; class=&quot;headerlink&quot; title=&quot;The power method&quot;&gt;&lt;/a&gt;The power method&lt;/h5&gt;&lt;p&gt;$$x_1 = A x_0$$&lt;/p&gt;
&lt;p&gt;$$x_2 = A x_1 = A^2 x_0$$&lt;/p&gt;
&lt;p&gt;$$x_3 = A x_2 = A^3 x_0$$&lt;/p&gt;
&lt;p&gt;$$x&lt;em&gt;k = A x&lt;/em&gt;{k-1} = A^k x_0$$&lt;/p&gt;
&lt;p&gt;For large powers of $k$, and by properly scaling this sequence, you will see that you obtain a good approximation of the dominant eigenvector of $A$.&lt;/p&gt;
&lt;p&gt;The power method with scaling: One way to accomplish this scaling is to determine the component of $Ax_i$ that has the &lt;strong&gt;largest absolute value&lt;/strong&gt; and multiply the vector $Ax_i$ by the reciprocal of this component. The resulting vector will then have components whose absolute values are less than or equal to $1$. Other scaling techniques are possible. &lt;/p&gt;
&lt;h4 id=&quot;Convergence-of-the-Power-method&quot;&gt;&lt;a href=&quot;#Convergence-of-the-Power-method&quot; class=&quot;headerlink&quot; title=&quot;Convergence of the Power method&quot;&gt;&lt;/a&gt;Convergence of the Power method&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;If $A$ is an $n$ x $n$ diagonalizable matrix with a dominant eigenvalue, then there exists a nonzero vector $x_0$ such that the sequence of vectors given by: $Ax_0$, $A^2x_0$, $A^3x_0$, $A^4x_0$,…, $A^kx_0$,… approaches a multiple of the dominant eigenvector of $A$. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because $A$ is diagonalizable, it has $n$ linearly independent eigenvectors $x_1$, $x_2$,…,$x_n$ with corresponding eigenvalue $\lambda_1$, $\lambda_2$,…,$\lambda_n$. Assume that these eigenvalues are ordered so that $\lambda_1$ is the dominant eigenvalue. Because the $n$ eigenvectors $x_1$, $x_2$, …, $x_n$ are linearly independent, they must form a basis for $R^n$. For the initial approximation $x_0$, choose a non-zero vector such that:&lt;/p&gt;
&lt;p&gt;$$x_0 = c_1 x_1 + c_2x_2 + … + c_nx_n$$&lt;/p&gt;
&lt;p&gt;has non-zero leading coefficients. If $c_1 = 0$, the power method may not converge, and a different $x_0$ must be used as the initial approximation. &lt;/p&gt;
&lt;p&gt;$$Ax_0 = A(c_1 x_1 + c_2x_2 + … + c_nx_n)$$ &lt;/p&gt;
&lt;p&gt;$$= c_1 A x_1 + c_2 A x_2 + … + c_n A x_n)$$&lt;/p&gt;
&lt;p&gt; $$= c_1 \lambda_1 x_1 + c_2 \lambda_2 x_2 + … + c_n \lambda_n x_n)$$&lt;/p&gt;
&lt;p&gt;Repeated multiplication of both sides of the equation by A produces:&lt;/p&gt;
&lt;p&gt;$$A^kx_0 = c_1 \lambda_1^k x_1 + c_2 \lambda_2^k x_2 + … + c_n \lambda_n^k x_n$$&lt;/p&gt;
&lt;p&gt;$$ = \lambda_1^k (c_1x_1 + c_2x_2{(\frac{\lambda_2}{\lambda_1})}^k + … + c_nx_n {(\frac{\lambda_2}{\lambda_1})}^k)$$&lt;/p&gt;
&lt;p&gt;As $k$ approaches infinity, this implies the approximation :&lt;/p&gt;
&lt;p&gt;$$A^kx_0 = \lambda_1^kc_1x_1$$&lt;/p&gt;
&lt;p&gt;and $c_1 != 0$.&lt;/p&gt;
&lt;p&gt;The power method will converge quickly if $\lambda_2 / \lambda_1$ is small, and slowly if the ratio is close to $1$. &lt;/p&gt;
&lt;p&gt;Another algorithm to compute eigenvalues and eigenvectors is named &lt;strong&gt;QR algorithm&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A visualization demo of eigenvector and eigenvalue: &lt;a href=&quot;http://setosa.io/ev/eigenvectors-and-eigenvalues/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eigenvectors and Eigenvalues&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Compute-the-second-largest-eigenvalues&quot;&gt;&lt;a href=&quot;#Compute-the-second-largest-eigenvalues&quot; class=&quot;headerlink&quot; title=&quot;Compute the second largest eigenvalues&quot;&gt;&lt;/a&gt;Compute the second largest eigenvalues&lt;/h4&gt;&lt;p&gt;The largest eigenvalue $\lambda_1$ and eigenvector $v&lt;em&gt;1$ by iterating $x&lt;/em&gt;{n+1} = \frac{Ax_n}{||Ax_n||}$ with a random initial $x_0$. Once we find a good approximation for $v_1$, we can consider $A = A - \frac{\lambda_1}{||x_1||^2}x_1x_1^T$. The new matrix is orthogonal to $v_1$. Use the power method on $A$ again, which will reveal $v_2$, an eigenvector of a largest eigenvalue of $A$, and continue. &lt;/p&gt;
&lt;h4 id=&quot;Markov-Matrix&quot;&gt;&lt;a href=&quot;#Markov-Matrix&quot; class=&quot;headerlink&quot; title=&quot;Markov Matrix&quot;&gt;&lt;/a&gt;Markov Matrix&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Markov matrix&lt;/strong&gt;: whose entries are positive and whose columns added up to one. It always has $\lambda = 1$ as its largest eigenvalue. That means that there is a value of $v_t$ for which:&lt;/p&gt;
&lt;p&gt;$$Av_t = \lambda v_t = v_t$$&lt;/p&gt;
&lt;p&gt;It’s  a steady state. &lt;/p&gt;
&lt;h4 id=&quot;Properties-of-Eigenvectors-and-Eigenvalues&quot;&gt;&lt;a href=&quot;#Properties-of-Eigenvectors-and-Eigenvalues&quot; class=&quot;headerlink&quot; title=&quot;Properties of Eigenvectors and Eigenvalues&quot;&gt;&lt;/a&gt;Properties of Eigenvectors and Eigenvalues&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Eigenvectors can only be found for square matrices, not every square matrix has eigenvectors &lt;/li&gt;
&lt;li&gt;All the eigenvectors of a matrix are perpendicular (orthogonal)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Linear-Algebra-Eigenvalues-and-Eigenvectors&quot;&gt;&lt;a href=&quot;#Linear-Algebra-Eigenvalues-and-Eigenvectors&quot; class=&quot;headerlink&quot; title=&quot;Linear
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Way to Python Tips</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Way-to-Python/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Way-to-Python/</id>
    <published>2016-09-30T20:19:05.172Z</published>
    <updated>2016-07-29T13:49:58.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Python-之禅&quot;&gt;&lt;a href=&quot;#Python-之禅&quot; class=&quot;headerlink&quot; title=&quot;Python 之禅&quot;&gt;&lt;/a&gt;Python 之禅&lt;/h3&gt;&lt;p&gt;The Zen of Python, by Tim Peters&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;Beautiful is better than ugly.&lt;br&gt;优美胜于丑陋（Python以编写优美的代码为目标）&lt;br&gt;Explicit is better than implicit.&lt;br&gt;明了胜于晦涩（优美的代码应当是明了的，命名规范，风格相似）&lt;br&gt;Simple is better than complex.&lt;br&gt;简洁胜于复杂（优美的代码应当是简洁的，不要有复杂的内部实现）&lt;br&gt;Complex is better than complicated.&lt;br&gt;复杂胜于凌乱（如果复杂不可避免，那代码间也不能有难懂的关系，要保持接口简洁）&lt;br&gt;Flat is better than nested.&lt;br&gt;扁平胜于嵌套（优美的代码应当是扁平的，不能有太多的嵌套）&lt;br&gt;Sparse is better than dense.&lt;br&gt;间隔胜于紧凑（优美的代码有适当的间隔，不要奢望一行代码解决问题）&lt;br&gt;Readability counts.&lt;br&gt;可读性很重要（优美的代码是可读的）&lt;br&gt;Special cases aren”t special enough to break the rules.&lt;br&gt;Although practicality beats purity.&lt;br&gt;即便假借特例的实用性之名，也不可违背这些规则（这些规则至高无上）&lt;br&gt;Errors should never pass silently.&lt;br&gt;Unless explicitly silenced.&lt;br&gt;不要包容所有错误，除非你确定需要这样做（精准地捕获异常，不写except:pass风格的代码）&lt;br&gt;In the face of ambiguity, refuse the temptation to guess.&lt;br&gt;当存在多种可能，不要尝试去猜测&lt;br&gt;There should be one– and preferably only one –obvious way to do it.&lt;br&gt;而是尽量找一种，最好是唯一一种明显的解决方案（如果不确定，就用穷举法）&lt;br&gt;Although that way may not be obvious at first unless you”re Dutch.&lt;br&gt;虽然这并不容易，因为你不是 Python 之父（这里的Dutch是指Guido）&lt;br&gt;Now is better than never.&lt;br&gt;Although never is often better than right now.&lt;br&gt;做也许好过不做，但不假思索就动手还不如不做（动手之前要细思量）&lt;br&gt;If the implementation is hard to explain, it”s a bad idea.&lt;br&gt;If the implementation is easy to explain, it may be a good idea.&lt;br&gt;如果你无法向人描述你的方案，那肯定不是一个好方案；反之亦然（方案测评标准）&lt;br&gt;Namespaces are one honking great idea — let”s do more of those!&lt;br&gt;命名空间是一种绝妙的理念，我们应当多加利用（倡导与号召）&lt;/p&gt;
&lt;h3 id=&quot;use-if-to-assign-value&quot;&gt;&lt;a href=&quot;#use-if-to-assign-value&quot; class=&quot;headerlink&quot; title=&quot;use if to assign value&quot;&gt;&lt;/a&gt;use if to assign value&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = a &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a &amp;gt; b &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It can also be used in list comprehensions.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;S = [x**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;M = [x**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Q = [x**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x % &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xrange(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Swap-Value&quot;&gt;&lt;a href=&quot;#Swap-Value&quot; class=&quot;headerlink&quot; title=&quot;Swap Value&quot;&gt;&lt;/a&gt;Swap Value&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;b,a = a,b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More examples:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;people = [&lt;span class=&quot;string&quot;&gt;&quot;David&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;123455&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;name,title,phone = people&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;people = [[&lt;span class=&quot;string&quot;&gt;&quot;David&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;123455&quot;&lt;/span&gt;],[&lt;span class=&quot;string&quot;&gt;&quot;David&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;123455&quot;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; name,title,phone &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; people:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; name,phone&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;合并字符串的值&quot;&gt;&lt;a href=&quot;#合并字符串的值&quot; class=&quot;headerlink&quot; title=&quot;合并字符串的值&quot;&gt;&lt;/a&gt;合并字符串的值&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;colors = [&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result = &lt;span class=&quot;string&quot;&gt;&quot;,&quot;&lt;/span&gt;.join(colors)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;result = result.join(&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;The method &lt;em&gt;join()&lt;/em&gt; returns a string in which the string elements of sequence have been joined by &lt;em&gt;str&lt;/em&gt; separator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样的使用效率比使用&lt;em&gt;for 循环&lt;/em&gt;进行拼接的效率要高。&lt;/p&gt;
&lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;h4 id=&quot;列表合并&quot;&gt;&lt;a href=&quot;#列表合并&quot; class=&quot;headerlink&quot; title=&quot;列表合并&quot;&gt;&lt;/a&gt;列表合并&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = a + b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;列表深复制&quot;&gt;&lt;a href=&quot;#列表深复制&quot; class=&quot;headerlink&quot; title=&quot;列表深复制&quot;&gt;&lt;/a&gt;列表深复制&lt;/h4&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt; = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;b&lt;/span&gt; = [&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;,[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;],&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = &lt;span class=&quot;tag&quot;&gt;b&lt;/span&gt;[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt; = [&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;b&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用关键字in&quot;&gt;&lt;a href=&quot;#使用关键字in&quot; class=&quot;headerlink&quot; title=&quot;使用关键字in&quot;&gt;&lt;/a&gt;使用关键字in&lt;/h3&gt;&lt;p&gt;判断一个key 是否在字典里的时候&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;d = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; c &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; d:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不要使用：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; d.has_key(&lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; d:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; d.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; key&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Python中dict对象是对key做过hash的，而&lt;em&gt;keys()&lt;/em&gt;方法会对dict中所有的key作为一个list对象，所以直接使用in的时候执行效率会比较快，代码也更简洁。&lt;/p&gt;
&lt;h3 id=&quot;字典&quot;&gt;&lt;a href=&quot;#字典&quot; class=&quot;headerlink&quot; title=&quot;字典&quot;&gt;&lt;/a&gt;字典&lt;/h3&gt;&lt;p&gt;dict是Python内置的数据结构，在写Python程序的时候会遇到。在这里介绍它的&lt;em&gt;get()&lt;/em&gt;和&lt;em&gt;defaultdict()&lt;/em&gt;方法。&lt;/p&gt;
&lt;h5 id=&quot;get&quot;&gt;&lt;a href=&quot;#get&quot; class=&quot;headerlink&quot; title=&quot;get&quot;&gt;&lt;/a&gt;get&lt;/h5&gt;&lt;p&gt;在获取dict中的数据时，我们一般使用index的方式，但是如果key不在的时候会抛出异常&lt;em&gt;KeyError&lt;/em&gt;。这个时候使用&lt;em&gt;get(key,default = None)&lt;/em&gt;可以避免异常。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;d = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; d.get(&lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; d.get(&lt;span class=&quot;string&quot;&gt;&quot;d&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;fromkeys&quot;&gt;&lt;a href=&quot;#fromkeys&quot; class=&quot;headerlink&quot; title=&quot;fromkeys&quot;&gt;&lt;/a&gt;fromkeys&lt;/h5&gt;&lt;p&gt;dict有个&lt;em&gt;fromkeys()&lt;/em&gt;方法，可以通过list生成一个dict,不过需要提供默认的value，例如：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;d = dict.fromkeys([&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;c&quot;&lt;/span&gt;],&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;列表去重&quot;&gt;&lt;a href=&quot;#列表去重&quot; class=&quot;headerlink&quot; title=&quot;列表去重&quot;&gt;&lt;/a&gt;列表去重&lt;/h5&gt;&lt;p&gt;我们可以使用 &lt;em&gt;fromkeys()&lt;/em&gt;来实现列表去重，效率要比使用&lt;em&gt;Set&lt;/em&gt;要高。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]: test_list = range(&lt;span class=&quot;number&quot;&gt;100000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]: test_data = map(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x%&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,test_list) + test_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]: len(test_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]: &lt;span class=&quot;number&quot;&gt;200000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(test)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...:     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&amp;#125;.fromkeys(test).keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]: timeit f1(test_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; loops, best of &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;21.3&lt;/span&gt; ms per loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(test)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...:     &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sets &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...:     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list(Set(test))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]: timeit f2(test_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; loops, best of &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;27.2&lt;/span&gt; ms per loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]: len(test_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]: &lt;span class=&quot;number&quot;&gt;200000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]: test_data = test_data + test_data + test_data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]: timeit f2(test_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; loops, best of &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;56.2&lt;/span&gt; ms per loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;]: timeit f1(test_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; loops, best of &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;33.4&lt;/span&gt; ms per loop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多可见： &lt;a href=&quot;https://www.peterbe.com/plog/uniqifiers-benchmark&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fastest way to uniqify a list in Python&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;字典操作&quot;&gt;&lt;a href=&quot;#字典操作&quot; class=&quot;headerlink&quot; title=&quot;字典操作&quot;&gt;&lt;/a&gt;字典操作&lt;/h5&gt;&lt;p&gt;Python中，可以使用&lt;em&gt;zip&lt;/em&gt;将两个list组装成一个dict,其中一个lsit的值作为Key,另外一个list的值作为Value.&lt;/p&gt;
&lt;p&gt;这里的zip是按照最短的列表进行扩展。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;given = [&lt;span class=&quot;string&quot;&gt;&quot;J&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;I&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;N&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;family = [&lt;span class=&quot;string&quot;&gt;&quot;K&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;I&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d_1 = dict(zip(given,family))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d_2 = dict(zip(family,given))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样，你可以使用dict的&lt;em&gt;keys()&lt;/em&gt;和&lt;em&gt;values()&lt;/em&gt;方法来获取key和Value的列表。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;d.keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;d.values()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果要按照最长的列表进行扩展，可以使用&lt;em&gt;map()&lt;/em&gt;.&lt;br&gt;当将func设置为&lt;strong&gt;None&lt;/strong&gt;时，可以起到 iterator的作用。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = map(&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,xrange(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;),xrange(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = zip(xrange(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;),xrange(&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dict(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dict(b)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;字典深复制&quot;&gt;&lt;a href=&quot;#字典深复制&quot; class=&quot;headerlink&quot; title=&quot;字典深复制&quot;&gt;&lt;/a&gt;字典深复制&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;h&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;e&quot;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = a.copy()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;字典中删除-key&quot;&gt;&lt;a href=&quot;#字典中删除-key&quot; class=&quot;headerlink&quot; title=&quot;字典中删除 key&quot;&gt;&lt;/a&gt;字典中删除 key&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;]: a = range(&lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;]: d = dict(zip(a,a))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;63&lt;/span&gt;]: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dict_del_2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(d)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c_d = d.copy()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; c_d.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; k&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;del&lt;/span&gt;(c_d[k])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....:             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;]: timeit dict_del_2(d)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; loop, best of &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;219&lt;/span&gt; ms per loop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;]: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dict_pop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(d)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....:     c_d = d.copy()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....:     &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; c_d.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....:         c_d.pop(k)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....:         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;66&lt;/span&gt;]: timeit dict_pop(d)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; loop, best of &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;304&lt;/span&gt; ms per loop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;要删除的key的数量较多，超过一半的话，建议重新生成dict。如果数量较少，在pop和del都可以的情况下，del会稍快一些。&lt;/p&gt;
&lt;h3 id=&quot;Python中的True&quot;&gt;&lt;a href=&quot;#Python中的True&quot; class=&quot;headerlink&quot; title=&quot;Python中的True&quot;&gt;&lt;/a&gt;Python中的True&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Fasle, True&lt;/li&gt;
&lt;li&gt;0, 1&lt;/li&gt;
&lt;li&gt;“”(空字符串)以外的字符串&lt;/li&gt;
&lt;li&gt;0,0.0,除0以外的数字&lt;/li&gt;
&lt;li&gt;[],(),{},set(),非空的list，tuple,set,dict&lt;/li&gt;
&lt;li&gt;None 大部分的对象，除了明确指定为False的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;判断奇数&quot;&gt;&lt;a href=&quot;#判断奇数&quot; class=&quot;headerlink&quot; title=&quot;判断奇数&quot;&gt;&lt;/a&gt;判断奇数&lt;/h3&gt;&lt;p&gt;使用位操作会比较快。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;even&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = filter(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, a)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;map-reduce-filter&quot;&gt;&lt;a href=&quot;#map-reduce-filter&quot; class=&quot;headerlink&quot; title=&quot;map, reduce, filter&quot;&gt;&lt;/a&gt;map, reduce, filter&lt;/h3&gt;&lt;p&gt;usage: &lt;em&gt;map(func,seq)&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_1 = [i**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; array]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_2 = map(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,array)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;usage: &lt;em&gt;filter(func,seq)&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_3 = filter(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x: x&amp;amp;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, array)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;usage: &lt;em&gt;reduce(func,seq)&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;array = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_4 = reduce(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x,y: x+y,array,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; reduce(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; x,y: x &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;gt; y &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; y,array)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strings = [&lt;span class=&quot;string&quot;&gt;&quot;abc&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;abcdabc&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;defabcabcabc&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; reduce(&lt;span class=&quot;keyword&quot;&gt;lambda&lt;/span&gt; count,string:count + string.count(&lt;span class=&quot;string&quot;&gt;&quot;abc&quot;&lt;/span&gt;),strings,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;eval&quot;&gt;&lt;a href=&quot;#eval&quot; class=&quot;headerlink&quot; title=&quot;eval&quot;&gt;&lt;/a&gt;eval&lt;/h3&gt;&lt;h3 id=&quot;decorator&quot;&gt;&lt;a href=&quot;#decorator&quot; class=&quot;headerlink&quot; title=&quot;decorator&quot;&gt;&lt;/a&gt;decorator&lt;/h3&gt;&lt;h3 id=&quot;yield&quot;&gt;&lt;a href=&quot;#yield&quot; class=&quot;headerlink&quot; title=&quot;yield&quot;&gt;&lt;/a&gt;yield&lt;/h3&gt;&lt;h3 id=&quot;for-else&quot;&gt;&lt;a href=&quot;#for-else&quot; class=&quot;headerlink&quot; title=&quot;for/else&quot;&gt;&lt;/a&gt;for/else&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;]: &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,n):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; n % x == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            print(&lt;span class=&quot;string&quot;&gt;&quot;%d = %d * %d&quot;&lt;/span&gt; % (n,x,n/x))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&quot;%d is a prime number&quot;&lt;/span&gt; % n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a prime number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a prime number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a prime number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a prime number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The &lt;em&gt;else&lt;/em&gt; clause belongs to the &lt;em&gt;for&lt;/em&gt; loop, &lt;em&gt;*not&lt;/em&gt; the &lt;em&gt;if&lt;/em&gt; statement.&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;When used with a loop, the &lt;em&gt;else&lt;/em&gt; clause has more in common with the &lt;em&gt;else&lt;/em&gt; clause of a try statement than it does that of if statements: a try statement’s &lt;em&gt;else&lt;/em&gt; clause runs when no exception occurs, and a loop’s &lt;em&gt;else&lt;/em&gt; clause runs when &lt;strong&gt;no break occurs&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;pass-statement&quot;&gt;&lt;a href=&quot;#pass-statement&quot; class=&quot;headerlink&quot; title=&quot;pass statement&quot;&gt;&lt;/a&gt;pass statement&lt;/h3&gt;&lt;p&gt;The &lt;em&gt;pass&lt;/em&gt; statement does nothing.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# busy wait for keyboard interrupt (Ctrl+C)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;Another place pass can be used is as a place-holder for a function or conditional body when you are working on new code, allowing you to keep thinking at a more abstract level. The pass is silently ignored.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a == b:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# remember to implement this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# remember to implement this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;File-operations&quot;&gt;&lt;a href=&quot;#File-operations&quot; class=&quot;headerlink&quot; title=&quot;File operations&quot;&gt;&lt;/a&gt;File operations&lt;/h2&gt;&lt;h3 id=&quot;with&quot;&gt;&lt;a href=&quot;#with&quot; class=&quot;headerlink&quot; title=&quot;with&quot;&gt;&lt;/a&gt;with&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;&quot;test.txt&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; f.read()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It’s not necessary to call &lt;em&gt;f.close()&lt;/em&gt; with using &lt;strong&gt;with&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;编程相关&quot;&gt;&lt;a href=&quot;#编程相关&quot; class=&quot;headerlink&quot; title=&quot;编程相关&quot;&gt;&lt;/a&gt;编程相关&lt;/h2&gt;&lt;h3 id=&quot;使用-xrange-处理长序列&quot;&gt;&lt;a href=&quot;#使用-xrange-处理长序列&quot; class=&quot;headerlink&quot; title=&quot;使用 xrange() 处理长序列&quot;&gt;&lt;/a&gt;使用 xrange() 处理长序列&lt;/h3&gt;&lt;p&gt;&lt;em&gt;xrange()&lt;/em&gt; 在序列中每次调用只产生一个整数元素，这样可以节省大量的系统内存。而 &lt;em&gt;range()&lt;/em&gt; 则直接返回一个完整的元素列表，用于循环时则会有不必要的开销。&lt;/p&gt;
&lt;h3 id=&quot;itertools-模块&quot;&gt;&lt;a href=&quot;#itertools-模块&quot; class=&quot;headerlink&quot; title=&quot;itertools 模块&quot;&gt;&lt;/a&gt;itertools 模块&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; itertools&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;iter_list = itertools.permutations([&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;list(iter_list)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用-bisect-模块保持列表排序&quot;&gt;&lt;a href=&quot;#使用-bisect-模块保持列表排序&quot; class=&quot;headerlink&quot; title=&quot;使用 bisect 模块保持列表排序&quot;&gt;&lt;/a&gt;使用 bisect 模块保持列表排序&lt;/h3&gt;&lt;p&gt;bisect 是一个二分查找实现和快速插入有序序列的工具。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; bisect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bisect.insort(list,element)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将一个元素插入列表中，而你不需要再次调用sort来保持容器的排序。&lt;/p&gt;
&lt;h3 id=&quot;可变对象，不可变对象&quot;&gt;&lt;a href=&quot;#可变对象，不可变对象&quot; class=&quot;headerlink&quot; title=&quot;可变对象，不可变对象&quot;&gt;&lt;/a&gt;可变对象，不可变对象&lt;/h3&gt;&lt;p&gt;Python在heap中分配的对象为两类，可变对象和不可变对象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不可变对象：对象的内容是不可变的，　int, string, float, tuple&lt;br&gt;*　可变对象：　对象的内容是可变的，list,dict&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不可变对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于Python中的变量存放的是对象引用，所以对不可变对象而言，尽管对象本身不可变，但变量的对象引用是可变的。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]: a = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]: id(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]: &lt;span class=&quot;number&quot;&gt;38359120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]: b = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]: id(b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]: &lt;span class=&quot;number&quot;&gt;38359120&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]: a = &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]: id(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]: &lt;span class=&quot;number&quot;&gt;38359096&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]: c = &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]: id(c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]: &lt;span class=&quot;number&quot;&gt;38359096&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;可变对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对象的内容是可以变化的。当对象的内容发生变化时，变量的对象引用是不会变化的。&lt;/p&gt;
&lt;h3 id=&quot;不要试图从那些会改变对象的函数得到结果&quot;&gt;&lt;a href=&quot;#不要试图从那些会改变对象的函数得到结果&quot; class=&quot;headerlink&quot; title=&quot;不要试图从那些会改变对象的函数得到结果&quot;&gt;&lt;/a&gt;不要试图从那些会改变对象的函数得到结果&lt;/h3&gt;&lt;p&gt;调用方法list.append()和list.sort()会直接改变一个对象，但不会将改变的对象返回回来（会返回&lt;strong&gt;None&lt;/strong&gt;）。 正确的做法是直接调用他们，而不是将结果赋值。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a = range(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;D = dict(zip(a,a))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; D.keys().sort():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; D[k]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;D.keys()会创建一个keys的列表，然后用sort方法将这个列表排序。但是这个sort方法会返回None,这个循环会失败。正确的做法是：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;keys = D.keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;keys.sort()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; k &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; keys:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; D[k]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;赋值语句不会创建对象的副本，仅仅是创建引用&quot;&gt;&lt;a href=&quot;#赋值语句不会创建对象的副本，仅仅是创建引用&quot; class=&quot;headerlink&quot; title=&quot;赋值语句不会创建对象的副本，仅仅是创建引用&quot;&gt;&lt;/a&gt;赋值语句不会创建对象的副本，仅仅是创建引用&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;L = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;M = [&lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt;,L,&lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L.append(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;M&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;L&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果这些共用的引用不是你想要的，可以明确的创建一个副本来避免共用的引用。对列表而言，可以用一个空列表的切片来创建一个顶层的副本。对于字典来说，可以用字典的 &lt;em&gt;dict.copy()&lt;/em&gt; 来实现。&lt;/p&gt;
&lt;p&gt;如果要实现深层次的复制，需要用到 &lt;em&gt;copy.deepcopy()&lt;/em&gt; 方法。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;]: a = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;]: b = [a,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;]: c = b[:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;91&lt;/span&gt;]: c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;91&lt;/span&gt;]: [[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;92&lt;/span&gt;]: b.append(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;93&lt;/span&gt;]: c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;93&lt;/span&gt;]: [[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;94&lt;/span&gt;]: a.append(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;]: b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;95&lt;/span&gt;]: [[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;In [&lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;]: c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Out[&lt;span class=&quot;number&quot;&gt;96&lt;/span&gt;]: [[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;], &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;获取对象变量的内存地址&quot;&gt;&lt;a href=&quot;#获取对象变量的内存地址&quot; class=&quot;headerlink&quot; title=&quot;获取对象变量的内存地址&quot;&gt;&lt;/a&gt;获取对象变量的内存地址&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;a&lt;/span&gt; = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;使用延迟加载加速&quot;&gt;&lt;a href=&quot;#使用延迟加载加速&quot; class=&quot;headerlink&quot; title=&quot;使用延迟加载加速&quot;&gt;&lt;/a&gt;使用延迟加载加速&lt;/h3&gt;&lt;p&gt;将 “import” 声明移入函数中，仅在需要的时候导入。如果有些模块不需要马上使用，则稍后导入他们。该技术不能提高整体性能，但可以更均衡的分配模块的加载时间。&lt;/p&gt;
&lt;h3 id=&quot;Python-中的装饰器&quot;&gt;&lt;a href=&quot;#Python-中的装饰器&quot; class=&quot;headerlink&quot; title=&quot;Python 中的装饰器&quot;&gt;&lt;/a&gt;Python 中的装饰器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652563779&amp;amp;idx=2&amp;amp;sn=5d1cc4e0c6f99721df3c11da36f61bcf&amp;amp;scene=5&amp;amp;srcid=0629Z3LhCJu7Py46ZoyRFoW6#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;5 个理由告诉你为什么要学习使用 Python 装饰器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652563661&amp;amp;idx=2&amp;amp;sn=4fc9acf578a2638a16e2767363413b99&amp;amp;scene=5&amp;amp;srcid=0515FNtBuNiKd5JayTirKRcQ#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简单 12 步理解 Python 装饰器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=400416137&amp;amp;idx=2&amp;amp;sn=6476dfa69b1e92f2dfe42d20e37e9b74&amp;amp;scene=5&amp;amp;srcid=1023aPqbMp5TtLPPbcNoCtuD#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 装饰器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=211098334&amp;amp;idx=2&amp;amp;sn=d3d036d467fe3234b9b69a838b1e138d&amp;amp;scene=5&amp;amp;srcid=0921Wr5nKJkCdDyGeRzxIyjG#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python装饰器与面向切面编程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652563775&amp;amp;idx=2&amp;amp;sn=617daeda81237b20c66feb21db8c59fe&amp;amp;scene=5&amp;amp;srcid=0629TQVtMQgq8kB0L1hx0zBf#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pythonista 容易忽略的 python 编程方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.toptal.com/python/top-10-mistakes-that-python-programmers-make&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Buggy Python Code: The 10 Most Common Mistakes That Python Developers Make&lt;/a&gt; &lt;a href=&quot;http://www.imooc.com/article/1809&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 程序员经常犯的 10 个错误&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA4MjEyNTA5Mw==&amp;amp;mid=2652563849&amp;amp;idx=2&amp;amp;sn=83f3696e922f0703195cf26b9695fa5f&amp;amp;scene=5&amp;amp;srcid=0714T42q7z2uKQaT9acDxPZX#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 要你命三千&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Python-之禅&quot;&gt;&lt;a href=&quot;#Python-之禅&quot; class=&quot;headerlink&quot; title=&quot;Python 之禅&quot;&gt;&lt;/a&gt;Python 之禅&lt;/h3&gt;&lt;p&gt;The Zen of Python, by Tim Peters&lt;/p&gt;
&lt;p&gt;&amp;g
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Configuration</title>
    <link href="http://zhenv5.github.io/2016/05/17/Others/sublime_configuration/"/>
    <id>http://zhenv5.github.io/2016/05/17/Others/sublime_configuration/</id>
    <published>2016-05-17T08:59:09.803Z</published>
    <updated>2016-05-17T07:47:21.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Whitespace&quot;&gt;&lt;a href=&quot;#Whitespace&quot; class=&quot;headerlink&quot; title=&quot;Whitespace&quot;&gt;&lt;/a&gt;Whitespace&lt;/h3&gt;&lt;p&gt;To show all whitespace, in Preferences -&amp;gt; Settings - User, add:&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;draw_white_space&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;all&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Font-size&quot;&gt;&lt;a href=&quot;#Font-size&quot; class=&quot;headerlink&quot; title=&quot;Font size&quot;&gt;&lt;/a&gt;Font size&lt;/h3&gt;&lt;p&gt;In preferences -&amp;gt; Settings - User, set:&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;font_size&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Whitespace&quot;&gt;&lt;a href=&quot;#Whitespace&quot; class=&quot;headerlink&quot; title=&quot;Whitespace&quot;&gt;&lt;/a&gt;Whitespace&lt;/h3&gt;&lt;p&gt;To show all whitespace, in Preferences
    
    </summary>
    
      <category term="Sublime" scheme="http://zhenv5.github.io/categories/Sublime/"/>
    
    
      <category term="Sublime" scheme="http://zhenv5.github.io/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://zhenv5.github.io/2016/05/01/Social-Network/%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <id>http://zhenv5.github.io/2016/05/01/Social-Network/函数式编程/</id>
    <published>2016-05-01T17:55:52.733Z</published>
    <updated>2016-05-01T17:55:52.733Z</updated>
    
    <content type="html">&lt;p&gt;把函数作为参数&lt;br&gt;在2.1小节中，我们讲了高阶函数的概念，并编写了一个简单的高阶函数：&lt;br&gt;def add(x, y, f):&lt;br&gt;    return f(x) + f(y)&lt;br&gt;如果传入abs作为参数f的值：&lt;br&gt;add(-5, 9, abs)&lt;br&gt;根据函数的定义，函数执行的代码实际上是：&lt;br&gt;abs(-5) + abs(9)&lt;br&gt;由于参数 x, y 和 f 都可以任意传入，如果 f 传入其他函数，就可以得到不同的返回值。&lt;/p&gt;
&lt;p&gt;map()是 Python 内置的高阶函数，它接收一个函数 f 和一个 list，并通过把函数 f 依次作用在 list 的每个元素上，得到一个新的 list 并返回。&lt;br&gt;例如，对于list [1, 2, 3, 4, 5, 6, 7, 8, 9]&lt;br&gt;如果希望把list的每个元素都作平方，就可以用map()函数：&lt;/p&gt;
&lt;p&gt;因此，我们只需要传入函数f(x)=x&lt;em&gt;x，就可以利用map()函数完成这个计算：&lt;br&gt;def f(x):&lt;br&gt;    return x&lt;/em&gt;x&lt;br&gt;print map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9])&lt;br&gt;输出结果：&lt;br&gt;[1, 4, 9, 10, 25, 36, 49, 64, 81]&lt;br&gt;注意：map()函数不改变原有的 list，而是返回一个新的 list。&lt;br&gt;利用map()函数，可以把一个 list 转换为另一个 list，只需要传入转换函数。&lt;br&gt;由于list包含的元素可以是任何类型，因此，map() 不仅仅可以处理只包含数值的 list，事实上它可以处理包含任意类型的 list，只要传入的函数f可以处理这种数据类型。&lt;/p&gt;
&lt;p&gt;reduce()函数&lt;br&gt;reduce()函数也是Python内置的一个高阶函数。reduce()函数接收的参数和 map()类似，一个函数 f，一个list，但行为和 map()不同，reduce()传入的函数 f 必须接收两个参数，reduce()对list的每个元素反复调用函数f，并返回最终结果值。&lt;br&gt;例如，编写一个f函数，接收x和y，返回x和y的和：&lt;br&gt;def f(x, y):&lt;br&gt;    return x + y&lt;br&gt;调用 reduce(f, [1, 3, 5, 7, 9])时，reduce函数将做如下计算：&lt;br&gt;先计算头两个元素：f(1, 3)，结果为4；&lt;br&gt;再把结果和第3个元素计算：f(4, 5)，结果为9；&lt;br&gt;再把结果和第4个元素计算：f(9, 7)，结果为16；&lt;br&gt;再把结果和第5个元素计算：f(16, 9)，结果为25；&lt;br&gt;由于没有更多的元素了，计算结束，返回结果25。&lt;br&gt;上述计算实际上是对 list 的所有元素求和。虽然Python内置了求和函数sum()，但是，利用reduce()求和也很简单。&lt;br&gt;reduce()还可以接收第3个可选参数，作为计算的初始值。如果把初始值设为100，计算：&lt;br&gt;reduce(f, [1, 3, 5, 7, 9], 100)&lt;br&gt;结果将变为125，因为第一轮计算是：&lt;br&gt;计算初始值和第一个元素：f(100, 1)，结果为101。&lt;/p&gt;
&lt;p&gt;filter()函数&lt;br&gt;filter()函数是 Python 内置的另一个有用的高阶函数，filter()函数接收一个函数 f 和一个list，这个函数 f 的作用是对每个元素进行判断，返回 True或 False，filter()根据判断结果自动过滤掉不符合条件的元素，返回由符合条件元素组成的新list。&lt;br&gt;例如，要从一个list [1, 4, 6, 7, 9, 12, 17]中删除偶数，保留奇数，首先，要编写一个判断奇数的函数：&lt;br&gt;def is_odd(x):&lt;br&gt;    return x % 2 == 1&lt;br&gt;然后，利用filter()过滤掉偶数：&lt;br&gt;filter(is_odd, [1, 4, 6, 7, 9, 12, 17])&lt;br&gt;结果：[1, 7, 9, 17]&lt;br&gt;利用filter()，可以完成很多有用的功能，例如，删除 None 或者空字符串：&lt;br&gt;def is_not_empty(s):&lt;br&gt;    return s and len(s.strip()) &amp;gt; 0&lt;br&gt;filter(is_not_empty, [‘test’, None, ‘’, ‘str’, ‘  ‘, ‘END’])&lt;br&gt;结果：[‘test’, ‘str’, ‘END’]&lt;br&gt;注意: s.strip(rm) 删除 s 字符串中开头、结尾处的 rm 序列的字符。&lt;br&gt;当rm为空时，默认删除空白符（包括’\n’, ‘\r’, ‘\t’, ‘ ‘)，如下：&lt;br&gt;a = ‘     123’&lt;br&gt;a.strip()&lt;br&gt;结果： ‘123’&lt;/p&gt;
&lt;p&gt;a=’\t\t123\r\n’&lt;br&gt;a.strip()&lt;br&gt;结果：’123’&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;把函数作为参数&lt;br&gt;在2.1小节中，我们讲了高阶函数的概念，并编写了一个简单的高阶函数：&lt;br&gt;def add(x, y, f):&lt;br&gt;    return f(x) + f(y)&lt;br&gt;如果传入abs作为参数f的值：&lt;br&gt;add(-5, 9, abs)&lt;br&gt;根据函
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>String Fromat in Python</title>
    <link href="http://zhenv5.github.io/2016/04/21/Python/String-format-in-Python/"/>
    <id>http://zhenv5.github.io/2016/04/21/Python/String-format-in-Python/</id>
    <published>2016-04-21T17:57:18.420Z</published>
    <updated>2016-04-21T17:57:18.420Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;More details can be viewed here: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/string_format_in_python.ipynb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;string format in python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;More details can be viewed here: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/string_format_in_python.ipynb&quot; target=&quot;
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="String" scheme="http://zhenv5.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib save fig to pdf</title>
    <link href="http://zhenv5.github.io/2016/04/20/Python/Matplotlib-savefig-to-pdf/"/>
    <id>http://zhenv5.github.io/2016/04/20/Python/Matplotlib-savefig-to-pdf/</id>
    <published>2016-04-20T18:23:56.697Z</published>
    <updated>2016-04-20T18:23:56.697Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Savefig-to-pdf-format&quot;&gt;&lt;a href=&quot;#Savefig-to-pdf-format&quot; class=&quot;headerlink&quot; title=&quot;Savefig to pdf format&quot;&gt;&lt;/a&gt;Savefig to pdf format&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x, y, alpha  =&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, color = &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;, save_file = &lt;span class=&quot;string&quot;&gt;&quot;scatter_plot&quot;&lt;/span&gt;, format = &lt;span class=&quot;string&quot;&gt;&quot;pdf&quot;&lt;/span&gt;, show = True, grid = False, xlabel = &lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt;, ylabel = &lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt;, title = &lt;span class=&quot;string&quot;&gt;&quot;Scatter Plot&quot;&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	input: X, Y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output: scatter plot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fig = plt.Figure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fig.set_canvas(plt.gcf().canvas)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	plt.scatter(x,y, alpha=&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,color = color)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; grid:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		plt.grid(&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	plt.xlabel(xlabel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	plt.ylabel(ylabel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	plt.title(title)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; show:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		plt.show()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fig.savefig(save_file + &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; + format, format = format)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Source File can be viewed at &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/sun-lib/visualize_options.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Savefig-to-pdf-format&quot;&gt;&lt;a href=&quot;#Savefig-to-pdf-format&quot; class=&quot;headerlink&quot; title=&quot;Savefig to pdf format&quot;&gt;&lt;/a&gt;Savefig to pdf format&lt;/
    
    </summary>
    
      <category term="Matplotlib" scheme="http://zhenv5.github.io/categories/Matplotlib/"/>
    
    
      <category term="Matplotlib" scheme="http://zhenv5.github.io/tags/Matplotlib/"/>
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Crontab</title>
    <link href="http://zhenv5.github.io/2016/04/15/Others/Crontab-Run-Scripts-Automically/"/>
    <id>http://zhenv5.github.io/2016/04/15/Others/Crontab-Run-Scripts-Automically/</id>
    <published>2016-04-15T18:18:44.809Z</published>
    <updated>2016-04-15T18:18:44.809Z</updated>
    
    <content type="html">&lt;p&gt;I wrote a python script to solve the MCSS problem. Now I try to run this script daily with the help of &lt;strong&gt;crontab&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;View-Files&quot;&gt;&lt;a href=&quot;#View-Files&quot; class=&quot;headerlink&quot; title=&quot;View Files&quot;&gt;&lt;/a&gt;View Files&lt;/h3&gt;&lt;p&gt;There are several files such as &lt;em&gt;/etc/cron.daily&lt;/em&gt;, &lt;em&gt;/etc/cron.hourly&lt;/em&gt;, &lt;em&gt;/etc/cron.monthly&lt;/em&gt;, &lt;em&gt;/etc/cron.weekly&lt;/em&gt; or &lt;em&gt;/etc/crontab&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We can view particular user’s &lt;em&gt;crontab&lt;/em&gt; by:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo crontab &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Add-Commands&quot;&gt;&lt;a href=&quot;#Add-Commands&quot; class=&quot;headerlink&quot; title=&quot;Add Commands&quot;&gt;&lt;/a&gt;Add Commands&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Open file&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo vi &lt;span class=&quot;regexp&quot;&gt;/etc/&lt;/span&gt;crontab&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Add Command&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; * * * root python script.py &amp;gt;&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It will run &lt;em&gt;python script.py&lt;/em&gt; every 7:30 AM.&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I wrote a python script to solve the MCSS problem. Now I try to run this script daily with the help of &lt;strong&gt;crontab&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 
    
    </summary>
    
      <category term="Ubuntu" scheme="http://zhenv5.github.io/categories/Ubuntu/"/>
    
    
      <category term="Crontab" scheme="http://zhenv5.github.io/tags/Crontab/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning Resources</title>
    <link href="http://zhenv5.github.io/2016/04/12/Machine-Learning-and-Data-Mining/Deep-Learning-Resources/"/>
    <id>http://zhenv5.github.io/2016/04/12/Machine-Learning-and-Data-Mining/Deep-Learning-Resources/</id>
    <published>2016-04-13T02:23:41.395Z</published>
    <updated>2016-04-13T02:23:41.395Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Deep-Learning-Text-Book&quot;&gt;&lt;a href=&quot;#Deep-Learning-Text-Book&quot; class=&quot;headerlink&quot; title=&quot;Deep Learning Text Book&quot;&gt;&lt;/a&gt;Deep Learning Text Book&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deeplearningbook.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning Text Book&lt;/a&gt; by Ian Goodfellow, Yoshua Bengio and Aaron Courville&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://deeplearning.net/tutorial/deeplearning.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning Tutorial&lt;/a&gt; by LISA Lab&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/pubs/209355/DeepLearning-NowPublishing-Vol7-SIG-039.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning Methods and Applications&lt;/a&gt; by Li Deng and Dong Yu.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webcourse.cs.technion.ac.il/232601/Spring2016/en/ho.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep learning for natural language processing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Notes&quot;&gt;&lt;a href=&quot;#Notes&quot; class=&quot;headerlink&quot; title=&quot;Notes&quot;&gt;&lt;/a&gt;Notes&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://randomekek.github.io/deep/deeplearning.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Open-sources&quot;&gt;&lt;a href=&quot;#Open-sources&quot; class=&quot;headerlink&quot; title=&quot;Open sources&quot;&gt;&lt;/a&gt;Open sources&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://keras.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Keras: deep learning library for theano and tensorflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Games-based-on-deep-learning&quot;&gt;&lt;a href=&quot;#Games-based-on-deep-learning&quot; class=&quot;headerlink&quot; title=&quot;Games based on deep learning&quot;&gt;&lt;/a&gt;Games based on deep learning&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bitwise-ben/Fruit/blob/master/qlearning.py.ipynb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Q-learning example in Keras&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Deep-Learning-Text-Book&quot;&gt;&lt;a href=&quot;#Deep-Learning-Text-Book&quot; class=&quot;headerlink&quot; title=&quot;Deep Learning Text Book&quot;&gt;&lt;/a&gt;Deep Learning Tex
    
    </summary>
    
      <category term="Deep Learning" scheme="http://zhenv5.github.io/categories/Deep-Learning/"/>
    
    
      <category term="deep learning" scheme="http://zhenv5.github.io/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>OSC Tutorial</title>
    <link href="http://zhenv5.github.io/2016/04/12/Others/OSC-Tutorial/"/>
    <id>http://zhenv5.github.io/2016/04/12/Others/OSC-Tutorial/</id>
    <published>2016-04-12T18:27:11.568Z</published>
    <updated>2016-04-12T18:27:11.568Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Procedure&quot;&gt;&lt;a href=&quot;#Procedure&quot; class=&quot;headerlink&quot; title=&quot;Procedure&quot;&gt;&lt;/a&gt;Procedure&lt;/h3&gt;&lt;p&gt;How to add python packages using the conda package manager&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Load proper python module&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;module load python/&lt;span class=&quot;number&quot;&gt;2.7&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Clone python installation to local directory&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt; -&lt;span class=&quot;keyword&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;--clone=&quot;$PYTHON_HOME&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Activate clone environment&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;source &lt;span class=&quot;command&quot;&gt;activate&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Install package&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;conda &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; yt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;replace &lt;em&gt;yt&lt;/em&gt; with the name of the package you want to install.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test python package&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt; -c &lt;span class=&quot;string&quot;&gt;&quot;import yt;print yt.__file__&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;replace both instance of &lt;em&gt;yt&lt;/em&gt; with the name of the package you installed.&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;Remember, you will need to load the proper version of python before you go to use your newlly installed package.  Packages are only installed to one version of python.&lt;/p&gt;
&lt;p&gt;Hot to install your own python modules can be viewd at &lt;a href=&quot;https://www.osc.edu/documentation/howto/install-your-own-python-modules&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Procedure&quot;&gt;&lt;a href=&quot;#Procedure&quot; class=&quot;headerlink&quot; title=&quot;Procedure&quot;&gt;&lt;/a&gt;Procedure&lt;/h3&gt;&lt;p&gt;How to add python packages using the conda
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="OSC" scheme="http://zhenv5.github.io/tags/OSC/"/>
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Data Visualization Tools</title>
    <link href="http://zhenv5.github.io/2016/04/10/Machine-Learning-and-Data-Mining/Data-Visualization-Tools/"/>
    <id>http://zhenv5.github.io/2016/04/10/Machine-Learning-and-Data-Mining/Data-Visualization-Tools/</id>
    <published>2016-04-11T03:26:55.725Z</published>
    <updated>2016-04-11T03:26:55.725Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wentu.io/showcase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zhuanlan.zhihu.com/hemingke&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据冰山知乎专栏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wentu.io/showcase&quot; target=&quot;_blank&quot; r
    
    </summary>
    
      <category term="Visualization" scheme="http://zhenv5.github.io/categories/Visualization/"/>
    
    
      <category term="visualization" scheme="http://zhenv5.github.io/tags/visualization/"/>
    
  </entry>
  
  <entry>
    <title>Python Notebook Jupyter</title>
    <link href="http://zhenv5.github.io/2016/04/08/Python/Python-Notebook-Jupyter/"/>
    <id>http://zhenv5.github.io/2016/04/08/Python/Python-Notebook-Jupyter/</id>
    <published>2016-04-08T18:14:47.589Z</published>
    <updated>2016-04-08T18:14:47.589Z</updated>
    
    <content type="html">&lt;p&gt;Why not try Jupyter&lt;/p&gt;
&lt;h4 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h4&gt;&lt;p&gt;Install:&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; jupyter&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Upgrade:&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -U jupyter&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;jupyter&lt;/span&gt; notebook&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If it reminds you that &lt;em&gt;command not found&lt;/em&gt;, please use below command instead:&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~/.&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/bin/jupyter-notebook&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The notebook should be started, then use &lt;a href=&quot;http://localhost:8888/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8888/&lt;/a&gt; to visit the notebook.&lt;/p&gt;
&lt;p&gt;More commands can be viewed at &lt;a href=&quot;http://jupyter.readthedocs.org/en/latest/running.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Runing Jupyter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the home directory Jupyter opens is as same as your working directory in the terminal.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Why not try Jupyter&lt;/p&gt;
&lt;h4 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h4&gt;&lt;p&gt;Install:&lt;/p&gt;
&lt;figure cl
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Jupyter" scheme="http://zhenv5.github.io/tags/Jupyter/"/>
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Tensor Decomposition and Recommender Systems</title>
    <link href="http://zhenv5.github.io/2016/04/07/Machine-Learning-and-Data-Mining/Tensor-Decomposition-and-Recommender-Systems/"/>
    <id>http://zhenv5.github.io/2016/04/07/Machine-Learning-and-Data-Mining/Tensor-Decomposition-and-Recommender-Systems/</id>
    <published>2016-04-08T01:57:26.259Z</published>
    <updated>2016-04-08T01:57:26.259Z</updated>
    
    <content type="html">&lt;p&gt;Mainly from paper: &lt;a href=&quot;http://arxiv.org/pdf/1603.06038v1.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensor Decomposition and Recommender Systems&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Tucker-Decomposition&quot;&gt;&lt;a href=&quot;#Tucker-Decomposition&quot; class=&quot;headerlink&quot; title=&quot;Tucker Decomposition&quot;&gt;&lt;/a&gt;Tucker Decomposition&lt;/h4&gt;&lt;p&gt;Tensor $\mathcal{T}$ can be factorized as: $\mathcal{T} = \mathcal{G} \times_1 U \times_2 V \times_3 W$ where &lt;em&gt;U&lt;/em&gt;, &lt;em&gt;V&lt;/em&gt; and &lt;em&gt;W&lt;/em&gt; are orthogonal matrices, and represent embedding of corresponding objects into a lower-dimensional latent factors space with dimensionalities  &lt;em&gt;r1&lt;/em&gt;, &lt;em&gt;r2&lt;/em&gt; and &lt;em&gt;r3&lt;/em&gt; correspondingly. The core tensor $\mathcal{G}$ defines the form and the strength of multilinear relations between all three entities in the latent feature space.&lt;/p&gt;
&lt;h4 id=&quot;Online-Updates&quot;&gt;&lt;a href=&quot;#Online-Updates&quot; class=&quot;headerlink&quot; title=&quot;Online Updates&quot;&gt;&lt;/a&gt;Online Updates&lt;/h4&gt;&lt;p&gt;To deal with the problem of real-time recommendations, the authors adopt a well known &lt;em&gt;folding-in&lt;/em&gt; method [Information retrieval using a singular value decomposition model of latent semantic structure] to a higher order case. The folding-in procedure helps to quickly embed a previously unseen entity into the latent features space without recomputing the whole method.&lt;/p&gt;
&lt;p&gt;Nevertheless, this typically leads to a loss of orthogonality in factors and negatively impacts the accuracy of the model in the long run. This can be avoided with an &lt;em&gt;incremental SVD update&lt;/em&gt;, which for the matrices with missing entries was initially proposed by [Incremental singular value decomposition of uncertain data with missing values].&lt;/p&gt;
&lt;p&gt;A different incremental HOSVD-based model is proposed in [An Incremental Factorization Approach for Web Service Recommendation] for a highly dynamic, evolving environment, which used an extension of a two-dimensional incremental approach from [Incremental learning for robust visual tracking].&lt;/p&gt;
&lt;h4 id=&quot;RTF-and-PITF&quot;&gt;&lt;a href=&quot;#RTF-and-PITF&quot; class=&quot;headerlink&quot; title=&quot;RTF and PITF&quot;&gt;&lt;/a&gt;RTF and PITF&lt;/h4&gt;&lt;p&gt;Ranking with TF model (RTF)[69] and more elaborate pairwise interaction TF (PITF)[70] model emphasize, all missing entries can be split into 2 groups: the true negative feedback and unknown values.&lt;/p&gt;
&lt;p&gt;RTF model uses the Tucker format, it aims to directly maximizing AUC measure.&lt;/p&gt;
&lt;p&gt;The PITF model is built on top of RTF. It adopts Bayesian Personalized Ranking (BPR) technique proposed for MF case in [67] to the ranking approach.&lt;/p&gt;
&lt;h4 id=&quot;Improving-the-prediction-quality&quot;&gt;&lt;a href=&quot;#Improving-the-prediction-quality&quot; class=&quot;headerlink&quot; title=&quot;Improving the prediction quality&quot;&gt;&lt;/a&gt;Improving the prediction quality&lt;/h4&gt;&lt;p&gt;Some problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;high data sparsity typically leas to a less accurate predictive models&lt;/li&gt;
&lt;li&gt;tag ambiguity and redundancy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CubeRec[Cubic Analysis of Social Bookmarking for Personalized Recommendation] proose a clustering-based separation mechanism, which builds clusters of triplets (user,item,tag) based on the proximity of tags derived from the item-tag matrix derived from the item-tag matrix. After the initial problem is split into a number of sub-problems(corresponding to clusters) of a smaller size and hence with dense data. Every subproblem is then factorized with the HOSVD similarly to [83], and the resulting model is constructed as a combination of all the smaller TF models.&lt;/p&gt;
&lt;p&gt;Clustering-based HOSVD model (ClusterHOSVD)[Item Recommendation by Combing Semantically Enhanced Tag Clustering With Tensor HOSVD] also employ clustering approach. However, instead of splitting the problem, they replace tags by tag clusters and apply the HOSVD directly to the modified data consisting of (user,item,tag cluster) triplets.&lt;/p&gt;
&lt;h4 id=&quot;Usefule-Links&quot;&gt;&lt;a href=&quot;#Usefule-Links&quot; class=&quot;headerlink&quot; title=&quot;Usefule Links&quot;&gt;&lt;/a&gt;Usefule Links&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.offconvex.org/2015/12/17/tensor-decompositions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensor Methods in Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mainly from paper: &lt;a href=&quot;http://arxiv.org/pdf/1603.06038v1.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensor Decomposition and Recommender Sy
    
    </summary>
    
      <category term="Linear Algebra" scheme="http://zhenv5.github.io/categories/Linear-Algebra/"/>
    
    
      <category term="recommender system" scheme="http://zhenv5.github.io/tags/recommender-system/"/>
    
      <category term="tensor" scheme="http://zhenv5.github.io/tags/tensor/"/>
    
  </entry>
  
  <entry>
    <title>argparse module in Python</title>
    <link href="http://zhenv5.github.io/2016/03/31/Python/argparse-module/"/>
    <id>http://zhenv5.github.io/2016/03/31/Python/argparse-module/</id>
    <published>2016-04-01T00:31:41.502Z</published>
    <updated>2016-04-01T00:31:41.502Z</updated>
    
    <content type="html">&lt;p&gt;The &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#action&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;argparse&lt;/a&gt; is module in Python used to write user-friendly command-line interface.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Demo of argparse: Parser for command-line options, arguments and sub-commands&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; argparse&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; parse = argparse.ArgumentParser(description = &lt;span class=&quot;string&quot;&gt;&quot;Demo of argpase&quot;&lt;/span&gt;,prog = &lt;span class=&quot;string&quot;&gt;&quot;argparse-demo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; parse.add_argument(&lt;span class=&quot;string&quot;&gt;&quot;-a&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;--aa&quot;&lt;/span&gt;,help = &lt;span class=&quot;string&quot;&gt;&#39;parameter a which is a integer&#39;&lt;/span&gt;,required = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; parse.add_argument(&lt;span class=&quot;string&quot;&gt;&quot;-b&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;--bb&quot;&lt;/span&gt;,help = &lt;span class=&quot;string&quot;&gt;&#39;parameter b which is a boolean&#39;&lt;/span&gt;,required = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;,action = &lt;span class=&quot;string&quot;&gt;&quot;store_true&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; args = parse.parse_args()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.aa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.bb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Three steps in using argparse.&lt;/p&gt;
&lt;h4 id=&quot;Creating-a-Parser&quot;&gt;&lt;a href=&quot;#Creating-a-Parser&quot; class=&quot;headerlink&quot; title=&quot;Creating a Parser&quot;&gt;&lt;/a&gt;Creating a Parser&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;parse = argparse.ArgumentParser(description = &lt;span class=&quot;string&quot;&gt;&quot;Demo of argpase&quot;&lt;/span&gt;,prog = &lt;span class=&quot;string&quot;&gt;&quot;argparse-demo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#prog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;prog&lt;/a&gt;: the name of the program&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#description&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;description&lt;/a&gt;: Text to display before the argument help&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Adding-arguments&quot;&gt;&lt;a href=&quot;#Adding-arguments&quot; class=&quot;headerlink&quot; title=&quot;Adding arguments&quot;&gt;&lt;/a&gt;Adding arguments&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;parse.add_argument(&lt;span class=&quot;string&quot;&gt;&quot;-a&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;--aa&quot;&lt;/span&gt;,help = &lt;span class=&quot;string&quot;&gt;&#39;parameter a which is a integer&#39;&lt;/span&gt;,required = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More about the add_argument() method can be viewed at &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#description&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;Parsing-arguments&quot;&gt;&lt;a href=&quot;#Parsing-arguments&quot; class=&quot;headerlink&quot; title=&quot;Parsing arguments&quot;&gt;&lt;/a&gt;Parsing arguments&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;args = parse.parse_args()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.aa&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.bb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;Demo codes can be viewed at &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/Code/argparser-demo.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EOF&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#action&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;argparse&lt;/a&gt; is module in Python used
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="argparse" scheme="http://zhenv5.github.io/tags/argparse/"/>
    
  </entry>
  
  <entry>
    <title>Use Mysql in Python</title>
    <link href="http://zhenv5.github.io/2016/03/08/Python/Using-Mysql/"/>
    <id>http://zhenv5.github.io/2016/03/08/Python/Using-Mysql/</id>
    <published>2016-03-08T23:04:06.054Z</published>
    <updated>2016-03-08T23:04:06.054Z</updated>
    
    <content type="html">&lt;p&gt;MySQL is a widely used database.&lt;/p&gt;
&lt;h3 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h3&gt;&lt;p&gt;Several ways to install MySQL. You can download MySQL from its official website or using commands to install it:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt-get &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; mysql-&lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Remember your username and password.&lt;/p&gt;
&lt;p&gt;Then start mysql:&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo &lt;span class=&quot;literal&quot;&gt;start&lt;/span&gt; mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;stop mysql:&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mysql &lt;span class=&quot;literal&quot;&gt;stop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Log in to MySQL:&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql -&lt;span class=&quot;keyword&quot;&gt;u&lt;/span&gt; root -&lt;span class=&quot;keyword&quot;&gt;h&lt;/span&gt; localhost -p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Install-MySQL-Driver&quot;&gt;&lt;a href=&quot;#Install-MySQL-Driver&quot; class=&quot;headerlink&quot; title=&quot;Install MySQL Driver&quot;&gt;&lt;/a&gt;Install MySQL Driver&lt;/h3&gt;&lt;p&gt;Two mysql drivers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql-connector-python&lt;/li&gt;
&lt;li&gt;MySQL-python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Download mysql-connector-python from its webpage and run:&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo python setup&lt;span class=&quot;class&quot;&gt;.py&lt;/span&gt; instal&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Run a demo of how to connect mysql with python:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; mysql.connector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# change root password to yours:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn = mysql.connector.connect(user=&lt;span class=&quot;string&quot;&gt;&#39;root&#39;&lt;/span&gt;, password=&lt;span class=&quot;string&quot;&gt;&#39;password&#39;&lt;/span&gt;, database=&lt;span class=&quot;string&quot;&gt;&#39;test&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor = conn.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor.execute(&lt;span class=&quot;string&quot;&gt;&#39;create table user (id varchar(20) primary key, name varchar(20))&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor.execute(&lt;span class=&quot;string&quot;&gt;&#39;insert into user (id, name) values (%s, %s)&#39;&lt;/span&gt;, (&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Michael&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(&lt;span class=&quot;string&quot;&gt;&#39;rowcount =&#39;&lt;/span&gt;, cursor.rowcount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.commit()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor = conn.cursor()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor.execute(&lt;span class=&quot;string&quot;&gt;&#39;select * from user where id = %s&#39;&lt;/span&gt;, (&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;,))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;values = cursor.fetchall()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print(values)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cursor.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;conn.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Basic-Usage-of-MySQL&quot;&gt;&lt;a href=&quot;#Basic-Usage-of-MySQL&quot; class=&quot;headerlink&quot; title=&quot;Basic Usage of MySQL&quot;&gt;&lt;/a&gt;Basic Usage of MySQL&lt;/h3&gt;&lt;p&gt;After you log into mysql through terminal, you can shwo how many databases in mysql server:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;databases&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Before you use a database, you have to open it. In mysql, we use &lt;strong&gt;use&lt;/strong&gt; to open a database. For example, we want to open&lt;br&gt; &lt;em&gt;mysql&lt;/em&gt; database in MySQL:&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mysql&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To show how many tables in this database:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;tables&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To view each value of records in table &lt;em&gt;user&lt;/em&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; host,&lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To view all values:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;user&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To exit mysql:&lt;/p&gt;
&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;quit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;exit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001391435131816c6a377e100ec4d43b3fc9145f3bb8056000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/0014021031294178f993c85204e4d1b81ab032070641ce5000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用SQLAlchemy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;MySQL is a widely used database.&lt;/p&gt;
&lt;h3 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h3&gt;&lt;p&gt;Several wa
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Mysql" scheme="http://zhenv5.github.io/tags/Mysql/"/>
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python itertools</title>
    <link href="http://zhenv5.github.io/2016/03/06/Python/Python-itertools/"/>
    <id>http://zhenv5.github.io/2016/03/06/Python/Python-itertools/</id>
    <published>2016-03-06T19:36:53.376Z</published>
    <updated>2016-03-06T19:36:53.376Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/itertools.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itertools: functions creating iterators for efficient looping&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fall into three categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;infinite iterators&lt;/li&gt;
&lt;li&gt;iterators terminating on the shortest input sequence&lt;/li&gt;
&lt;li&gt;combinatoric generators&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;chain&quot;&gt;&lt;a href=&quot;#chain&quot; class=&quot;headerlink&quot; title=&quot;chain&quot;&gt;&lt;/a&gt;chain&lt;/h4&gt;&lt;p&gt;Used for treating consecutive sequence as a single sequence&lt;/p&gt;
&lt;p&gt;Equivalent to:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*iterables)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# use * before iterables to collect all remaining arguments into a tuple&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; it &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; iterables:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; element&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it.chain(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;BCD&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;EFT&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; element&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Alternate constructor is &lt;strong&gt;from_iterable&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it.chain.from_iterable([&lt;span class=&quot;string&quot;&gt;&quot;ABC&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;DEFFFF&quot;&lt;/span&gt;]):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; element&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;combinations&quot;&gt;&lt;a href=&quot;#combinations&quot; class=&quot;headerlink&quot; title=&quot;combinations&quot;&gt;&lt;/a&gt;combinations&lt;/h4&gt;&lt;p&gt;return r length subsequences of elements from the input iterable&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(iterable,r)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; it.combinations(iterable,r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = com([&lt;span class=&quot;string&quot;&gt;&quot;ABC&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;DEF&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;HI&quot;&lt;/span&gt;],&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ele &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; c:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; ele&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;combinations(‘ABCD’, 2): AB,AC,AD,BC,BD,CD&lt;/li&gt;
&lt;li&gt;combinations_with_replacement(‘ABCD’, 2): AA AB AC AD BB BC BD CC CD DD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More functions such as &lt;strong&gt;compress&lt;/strong&gt;, &lt;strong&gt;groupby&lt;/strong&gt;,&lt;strong&gt;ifilter&lt;/strong&gt;,&lt;strong&gt;izip&lt;/strong&gt;, can be viewed at itertools’ &lt;a href=&quot;https://docs.python.org/2/library/itertools.html#itertools.chain&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recommendation: &lt;a href=&quot;http://www.oschina.net/translate/python-functions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Useful Python Functions and Features You Need to Know&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/itertools.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itertools: functions creating iterators for eff
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="itertools" scheme="http://zhenv5.github.io/tags/itertools/"/>
    
  </entry>
  
  <entry>
    <title>OSU CCSS Compliance Notes - Ubuntu</title>
    <link href="http://zhenv5.github.io/2016/02/22/Python/OSU-MCSS-Compliance-Notes-Ubuntu/"/>
    <id>http://zhenv5.github.io/2016/02/22/Python/OSU-MCSS-Compliance-Notes-Ubuntu/</id>
    <published>2016-02-23T03:02:30.549Z</published>
    <updated>2016-02-23T03:02:30.549Z</updated>
    
    <content type="html">&lt;p&gt;This script aims to install and check OSU MCSS script automatically.&lt;/p&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;&lt;p&gt;This error occurs frequently:&lt;/p&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ANTI-MALWARE&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt; The anti-malware script found viruses.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;sql&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Check&lt;/span&gt; the /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;/anti-malware.&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Once investigated, remove this message &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; deleting this echo line &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/etc/bash.bashrc (should be near the &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MCSS:  The MCSS script &lt;span class=&quot;keyword&quot;&gt;check&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;failed&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Check&lt;/span&gt; /&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;/mcss.&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Once investigated, remove this message &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; deleting the this echo line &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/etc/bash.bashrc (should be near the &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The &lt;span class=&quot;keyword&quot;&gt;system&lt;/span&gt; will be &lt;span class=&quot;keyword&quot;&gt;shutdown&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; this &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;fixed&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;I have to follow &lt;a href=&quot;https://cse.osu.edu/computing-services/security/ccss-certification/ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CCSS Compliance Notes: Ubuntu&lt;/a&gt; to install and setup. It’s very boring.&lt;/p&gt;
&lt;p&gt;We have learned how to use subprocess recently, why don’t we write a script to do it automatically?&lt;/p&gt;
&lt;p&gt;Not familiar with &lt;a href=&quot;https://docs.python.org/2/library/subprocess.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;subprocess&lt;/a&gt;: click &lt;a href=&quot;http://www.zhenv5.info/2016/02/21/Python/Python-Module-subprocess/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;subprocess, a Python module can replace shell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run&quot;&gt;&lt;a href=&quot;#Run&quot; class=&quot;headerlink&quot; title=&quot;Run&quot;&gt;&lt;/a&gt;Run&lt;/h3&gt;&lt;p&gt;The python code is very simple:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; subprocess&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run_command&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(command)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; command&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	p = subprocess.Popen(command,shell = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, stdout = subprocess.PIPE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	o = p.communicate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; o[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initial&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo apt-get clean&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo apt-get update&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo apt-get -y --purge dist-upgrade&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; os.path.exists(&lt;span class=&quot;string&quot;&gt;&quot;ubuntu-mcss-1.3/&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; os.path.exists(&lt;span class=&quot;string&quot;&gt;&quot;ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;download ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			run_command(&lt;span class=&quot;string&quot;&gt;&quot;wget http://web.cse.ohio-state.edu/cs/security/ccss/resources/ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			run_command(&lt;span class=&quot;string&quot;&gt;&quot;tar -vxzf ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	os.chdir(&lt;span class=&quot;string&quot;&gt;&quot;ubuntu-mcss-1.3/&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo ./install.sh&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo ./mcss -i&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Finished  setups&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	initial()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Make sure that you have followed instructions on &lt;a href=&quot;https://cse.osu.edu/computing-services/security/ccss-certification/ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CCSS Compliance Notes: Ubuntu&lt;/a&gt; at the first time. After that you can use above codes whenever you meet MCSS problem.&lt;/p&gt;
&lt;p&gt;Updates of codes can be viewed at Githup: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/Code/osu-mcss.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;osu-mcss.py&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This script aims to install and check OSU MCSS script automatically.&lt;/p&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot;
    
    </summary>
    
      <category term="Ubuntu" scheme="http://zhenv5.github.io/categories/Ubuntu/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="Subprocess" scheme="http://zhenv5.github.io/tags/Subprocess/"/>
    
  </entry>
  
  <entry>
    <title>subprocess, a Python module can replace shell</title>
    <link href="http://zhenv5.github.io/2016/02/21/Python/Python-Module-subprocess/"/>
    <id>http://zhenv5.github.io/2016/02/21/Python/Python-Module-subprocess/</id>
    <published>2016-02-22T04:51:24.959Z</published>
    <updated>2016-02-22T04:51:24.959Z</updated>
    
    <content type="html">&lt;p&gt;The &lt;strong&gt;subprocess&lt;/strong&gt; module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. This module intends to replace several older modules and functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;os.system&lt;/li&gt;
&lt;li&gt;os.spawn&lt;/li&gt;
&lt;li&gt;os.popen&lt;/li&gt;
&lt;li&gt;popen.2&lt;/li&gt;
&lt;li&gt;commands&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://hackerxu.com/2014/10/09/subprocess.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python subprocess模块总结
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/imzoer/article/details/8678029&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python中subprocess学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-26000296-id-4461522.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; python子进程模块subprocess详解与应用实例 之一&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-26000296-id-4461541.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; python子进程模块subprocess详解与应用实例 之二 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-26000296-id-4461555.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; python子进程模块subprocess详解与应用实例 之三 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;strong&gt;subprocess&lt;/strong&gt; module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their ret
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Module" scheme="http://zhenv5.github.io/tags/Module/"/>
    
      <category term="subprocess" scheme="http://zhenv5.github.io/tags/subprocess/"/>
    
  </entry>
  
  <entry>
    <title>Cool Python Modules</title>
    <link href="http://zhenv5.github.io/2016/02/21/Python/Cool-Python-Modules/"/>
    <id>http://zhenv5.github.io/2016/02/21/Python/Cool-Python-Modules/</id>
    <published>2016-02-22T04:49:39.698Z</published>
    <updated>2016-02-22T04:49:39.698Z</updated>
    
    <content type="html">&lt;p&gt;Life is short, I use Python.&lt;/p&gt;
&lt;h3 id=&quot;Python-Modules&quot;&gt;&lt;a href=&quot;#Python-Modules&quot; class=&quot;headerlink&quot; title=&quot;Python Modules&quot;&gt;&lt;/a&gt;Python Modules&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/urllib2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;urllib2&lt;/a&gt;: extensible library for opening URLs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tweepy.readthedocs.org/en/v3.5.0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tweepy&lt;/a&gt;: a easy way to use twitter API&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/subprocess.html#popen-constructor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;subprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/shlex.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shlex&lt;/a&gt;: The shlex class makes it easy to write lexical analyzers for simple syntaxes resembling that of the Unix shell&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.scrapy.org/en/latest/#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scrapy&lt;/a&gt;: a framework for crawling web sites.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://networkx.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;networks&lt;/a&gt;: a framework to study social network.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Ref&quot;&gt;&lt;a href=&quot;#Ref&quot; class=&quot;headerlink&quot; title=&quot;Ref&quot;&gt;&lt;/a&gt;Ref&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-are-the-best-Python-scripts-youve-ever-written&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What are the best Python scripts you’ve ever written?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.linuxeye.com/410.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python多线程抓取代理服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kuqin.com/shuoit/20150313/345239.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python写爬虫抓站的一些技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/81398/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何使用 urllib 包获取网络资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seanlin.logdown.com/posts/239883-python-idioms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 慣用語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/82633/?utm_source=group.jobbole.com&amp;amp;utm_medium=relatedArticles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 工具列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/83588/?utm_source=group.jobbole.com&amp;amp;utm_medium=relatedArticles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何用 Python 爬取需要登录的网站？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/82000/?utm_source=group.jobbole.com&amp;amp;utm_medium=relatedArticles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用python爬虫抓站的一些技巧总结：进阶篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ranlei.github.io/urllib3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;URLLIB3的抓取问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Life is short, I use Python.&lt;/p&gt;
&lt;h3 id=&quot;Python-Modules&quot;&gt;&lt;a href=&quot;#Python-Modules&quot; class=&quot;headerlink&quot; title=&quot;Python Modules&quot;&gt;&lt;/a&gt;Python M
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Module" scheme="http://zhenv5.github.io/tags/Module/"/>
    
      <category term="subprocess" scheme="http://zhenv5.github.io/tags/subprocess/"/>
    
      <category term="tweepy" scheme="http://zhenv5.github.io/tags/tweepy/"/>
    
      <category term="urllib2" scheme="http://zhenv5.github.io/tags/urllib2/"/>
    
  </entry>
  
  <entry>
    <title>Build VTK on Ubuntu</title>
    <link href="http://zhenv5.github.io/2016/02/18/Build-VTK-on-Ubuntu/"/>
    <id>http://zhenv5.github.io/2016/02/18/Build-VTK-on-Ubuntu/</id>
    <published>2016-02-18T15:43:37.690Z</published>
    <updated>2016-02-18T15:43:37.690Z</updated>
    
    <content type="html">&lt;p&gt;VTK is an open source framework for 3D computer graphics. I tried to build it on my Ubuntu systems, but failed for several times. I followed&lt;br&gt;and modified &lt;a href=&quot;http://www.vtk.org/Wiki/VTK/Building/Linux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;this scripts&lt;/a&gt; to build it successfully.&lt;/p&gt;
&lt;h3 id=&quot;Download&quot;&gt;&lt;a href=&quot;#Download&quot; class=&quot;headerlink&quot; title=&quot;Download&quot;&gt;&lt;/a&gt;Download&lt;/h3&gt;&lt;p&gt;Clone with git:&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;git&lt;/span&gt;://vtk.org/VTK.git VTK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Configure&quot;&gt;&lt;a href=&quot;#Configure&quot; class=&quot;headerlink&quot; title=&quot;Configure&quot;&gt;&lt;/a&gt;Configure&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir VTK-Release-build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; VTK-Release-build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cmake -DCMAKE_BUILD_TYPE:STRING=Release /path/to/VTK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Qt-Setup&quot;&gt;&lt;a href=&quot;#Qt-Setup&quot; class=&quot;headerlink&quot; title=&quot;Qt Setup&quot;&gt;&lt;/a&gt;Qt Setup&lt;/h3&gt;&lt;p&gt;VTK requires QT. I used Qt5 at first, but failed to install denali. I succeed with using QT4.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download qt offline installer for linux:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkdir qt5&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;-install &amp;amp;&amp;amp; cd qt5&lt;span class=&quot;number&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;-install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http:&lt;span class=&quot;comment&quot;&gt;//download.qt-project.org/official_releases/qt/5.2/5.2.1/qt-opensource-linux-x64-5.2.1.run&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod +x qt-opensource-linux-x64-&lt;span class=&quot;number&quot;&gt;5.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./qt-opensource-linux-x64-&lt;span class=&quot;number&quot;&gt;5.2&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;.run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install to a separate directory, for example mine is installed at: $HOME/QT&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure VTK with the following options&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cmake -&lt;span class=&quot;constant&quot;&gt;DVTK_QT_VERSION&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:STRING=&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; -&lt;span class=&quot;constant&quot;&gt;DQT_QMAKE_EXECUTABLE&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:PATH=/home/jiankai/Qt/&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;5.5&lt;/span&gt;/gcc_64/bin/qmake -&lt;span class=&quot;constant&quot;&gt;DVTK_Group_Qt&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:BOOL=ON&lt;/span&gt; -&lt;span class=&quot;constant&quot;&gt;DCMAKE_PREFIX_PATH&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:PATH=/home/jiankai/Qt/&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;5.5&lt;/span&gt;/gcc_64/bin/cmake -&lt;span class=&quot;constant&quot;&gt;DBUILD_SHARED_LIBS&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:BOOL=ON&lt;/span&gt; /path/to/&lt;span class=&quot;constant&quot;&gt;VTK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If CMake is not installed, You can install CMake by following &lt;a href=&quot;https://cmake.org/install/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installing CMake&lt;/a&gt;. And If you have CMake errors, such as:&lt;/p&gt;
&lt;figure class=&quot;highlight vbnet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CMake &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;: Could &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; find CMAKE_ROOT !!!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CMake has most likely &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; been installed correctly.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Modules directory &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; found &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Applications/CMake &lt;span class=&quot;number&quot;&gt;2.8&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;11.&lt;/span&gt;app/Contents/bin&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CMake &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt; executing cmake::LoadCache(). Aborting.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It’s a &lt;a href=&quot;http://stackoverflow.com/questions/18615451/cmake-missing-modules-directory&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CMake missing modules directory discussed in Stackoverflow&lt;/a&gt;. Following below scripts to solve:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vi ~/.bashrc&lt;/li&gt;
&lt;li&gt;edit .bahsrc by adding: export PATH=$PATH:/usr/bin:/bin&lt;/li&gt;
&lt;li&gt;source ~/.bashrc&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another error is related to QT5, It shows that &lt;a href=&quot;http://stackoverflow.com/questions/18722329/cmake-does-not-find-qt-5-1-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CMake cannot find my QT5 library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fixed it with following in /path/to/VTK/GUISupport/QT/CMakeLists.txt:&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;set(CMAKE_PREFIX_PATH &lt;span class=&quot;variable&quot;&gt;$ENV&lt;/span&gt;&amp;#123;HOME&amp;#125;/QT/&lt;span class=&quot;number&quot;&gt;5.5&lt;/span&gt;/gcc_64)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Methods to install Qt4, can be viewed &lt;a href=&quot;http://www.vtk.org/Wiki/VTK/Building/Linux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;, remember to use “make install” after “make”.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mkdir qt-4.8.6-build &amp;amp;&amp;amp; cd qt-4.8.6-build&lt;/li&gt;
&lt;li&gt;wget &lt;a href=&quot;http://download.qt-project.org/official_releases/qt/4.8/4.8.6/qt-everywhere-opensource-src-4.8.6.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://download.qt-project.org/official_releases/qt/4.8/4.8.6/qt-everywhere-opensource-src-4.8.6.tar.gz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tar xzf qt-everywhere-opensource-src-4.8.6.tar.gz&lt;/li&gt;
&lt;li&gt;cd qt-everywhere-opensource-src-4.8.6&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then in the VTK build directory, configure VTK with the path to the Qt build&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo cmake -&lt;span class=&quot;constant&quot;&gt;DQT_QMAKE_EXECUTABLE&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:PATH=~/Documents/Software/qt-&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;4.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;-build/qt-everywhere-opensource-src-&lt;span class=&quot;number&quot;&gt;4.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;/bin/qmake -&lt;span class=&quot;constant&quot;&gt;DVTK_Group_Qt&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:BOOL=ON&lt;/span&gt;  -&lt;span class=&quot;constant&quot;&gt;DBUILD_SHARED_LIBRARIES&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:BOOL=ON&lt;/span&gt; -&lt;span class=&quot;constant&quot;&gt;DQT_QMAKE_EXECUTABLE&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:PATH=~/Documents/Software/qt-&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;4.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;-build/qt-everywhere-opensource-src-&lt;span class=&quot;number&quot;&gt;4.8&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;/bin/ ../&lt;span class=&quot;constant&quot;&gt;VTK&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Some errors such as:&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;Could NOT find Qt4 (missing: QT_QMAKE_EXECUTABLE QT_MOC_EXECUTABLE&lt;br&gt;QT_RCC_EXECUTABLE QT_UIC_EXECUTABLE QT_INCLUDE_DIR QT_LIBRARY_DIR&lt;br&gt;QT_QTCORE_LIBRARY)&lt;/p&gt;
&lt;p&gt;Possible solutions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the path to the directory containing the qmake executable to your PATH environment variable (i.e. export PATH=/path/to/qmake/dir/:PATH under linux). Remember use source after configuration.&lt;/li&gt;
&lt;li&gt;Set the cmake variable QT_QMAKE_EXECUTABLE to the full path of the qmake executable (i.e. cmake /path/to/CMakeLists.txt -DQT_QMAKE_EXECUTABLE=/path/to/qmake/executable/dir/)&lt;/li&gt;
&lt;li&gt;Set the QT_QMAKE_EXECUTABLE in your CMakeCache.txt or using ccmake/cmakegui&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Build&quot;&gt;&lt;a href=&quot;#Build&quot; class=&quot;headerlink&quot; title=&quot;Build&quot;&gt;&lt;/a&gt;Build&lt;/h3&gt;&lt;p&gt;Once CMake finishes successfully configuring, use make inside the build directory.&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Install it to a system-wide location:&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo make &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Good Luck.&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;VTK is an open source framework for 3D computer graphics. I tried to build it on my Ubuntu systems, but failed for several times. I follo
    
    </summary>
    
      <category term="Programming" scheme="http://zhenv5.github.io/categories/Programming/"/>
    
    
      <category term="CMake" scheme="http://zhenv5.github.io/tags/CMake/"/>
    
      <category term="QT" scheme="http://zhenv5.github.io/tags/QT/"/>
    
      <category term="Ubuntu" scheme="http://zhenv5.github.io/tags/Ubuntu/"/>
    
      <category term="VTK" scheme="http://zhenv5.github.io/tags/VTK/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to Heap</title>
    <link href="http://zhenv5.github.io/2016/02/15/Python/Heap-and-Heap%20-Queue-Algorithm/"/>
    <id>http://zhenv5.github.io/2016/02/15/Python/Heap-and-Heap -Queue-Algorithm/</id>
    <published>2016-02-15T22:15:38.109Z</published>
    <updated>2016-02-15T22:14:04.640Z</updated>
    
    <content type="html">&lt;h3 id=&quot;heapq-Heap-queue-algorithm&quot;&gt;&lt;a href=&quot;#heapq-Heap-queue-algorithm&quot; class=&quot;headerlink&quot; title=&quot;heapq - Heap queue algorithm&quot;&gt;&lt;/a&gt;heapq - Heap queue algorithm&lt;/h3&gt;&lt;p&gt;heapq is a standard library in Python, documentation is here: &lt;a href=&quot;https://docs.python.org/2/library/heapq.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;heapq&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;heapq maintains a min-heap. As we know min-heap is a binary tree for which parent node has a value less than or equal to any of its children. This implementation can use arrays. If the parent node’s index is &lt;em&gt;k&lt;/em&gt;, the left child will be &lt;em&gt;2k+1&lt;/em&gt;, and the right child will be &lt;em&gt;2k+2&lt;/em&gt;, counting element from 0.&lt;/p&gt;
&lt;h4 id=&quot;Functions&quot;&gt;&lt;a href=&quot;#Functions&quot; class=&quot;headerlink&quot; title=&quot;Functions&quot;&gt;&lt;/a&gt;Functions&lt;/h4&gt;&lt;p&gt;It provides following useful functions, detailed information can by found in the documentation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;heapq.heapify(x): transform list x into a heap, in-place, in linear time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.push(heap,item): push the value item onto the heap, maintaining the heap invariant&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.pop(heap): pop and return the smallest item from the heap, maintaining the heap invariant. To access the smallest item without popping it, use heap[0]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.pushpop(heap,item): push item onto the heap and return the smallest item from the heap. It runs more efficiently than heappush(heap,item) followed by a separate call to heappop(heap).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.nlargest(n,iterableItems): return a list with the n largest elements from the dataset defined by iterableItems. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.nsmallest(n,iterableItems): return a list with the smallest elements from the dataset defined by iterableItems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Examples&quot;&gt;&lt;a href=&quot;#Examples&quot; class=&quot;headerlink&quot; title=&quot;Examples&quot;&gt;&lt;/a&gt;Examples&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; heapq&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h = [&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;121&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;87&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;heapq.heapify(h)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;heapq.heappush(h,&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a =heapq.heappop(h)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;656&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;large = heapq.nlargest(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; large&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;small = heapq.nsmallest(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; small&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**heapsort** can be implemented by pushing all values onto a heap &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; then poping off the smallest values one at a time:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```Python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;heapsort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(iterable)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	h = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; iterable:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		heapq.heappush(h,item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [heapq.heappop(h) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(h))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;656&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l1 = heapsort(l)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Use-Min-Heap-to-find-the-k-largest-smllest-elements-in-an-array&quot;&gt;&lt;a href=&quot;#Use-Min-Heap-to-find-the-k-largest-smllest-elements-in-an-array&quot; class=&quot;headerlink&quot; title=&quot;Use Min-Heap to find the k largest(smllest) elements in an array&quot;&gt;&lt;/a&gt;Use Min-Heap to find the k largest(smllest) elements in an array&lt;/h3&gt;&lt;p&gt;We can use heapq.nlargest() and heapq.nsmallest() functions to find the k largest/smallest elements in an iterable list.&lt;/p&gt;
&lt;p&gt;What’s the idea behind these functions?&lt;/p&gt;
&lt;p&gt;Procedures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a Min Heap of the first k-elements (array[0] - array[k-1]). O(k)&lt;/li&gt;
&lt;li&gt;Find the k-largest: for each element( after the k-th element in the array from k to n-1), compare it with the root: if the element is greater than the root then push this element onto this heap, else ignore it. O((n-k)log(k))&lt;/li&gt;
&lt;li&gt;Find the k-smallest: for each element, compare it with the root, if the element is smaller than the root then push this element onto this heap, else ignore it. O((n-k)log(k))&lt;/li&gt;
&lt;li&gt;Finally, heap has k largest/smallest elements and root of heap is the k-th largest/smallest element.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Time complexity: O((n-k)log(k) + k) without sorted output. If sorted output is needed then O(((n-k)log(k) + k )+ klog(k)) = O(nlog(k) + k).&lt;/p&gt;
&lt;h3 id=&quot;Build-your-own-binary-heap&quot;&gt;&lt;a href=&quot;#Build-your-own-binary-heap&quot; class=&quot;headerlink&quot; title=&quot;Build your own binary heap&quot;&gt;&lt;/a&gt;Build your own binary heap&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://interactivepython.org/runestone/static/pythonds/Trees/BinaryHeapImplementation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Binary Heap Implementation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;updates can be viewed here &lt;a href=&quot;http://zhenv5.farbox.com/post/python/heap-queue-algorithms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;updates&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;heapq-Heap-queue-algorithm&quot;&gt;&lt;a href=&quot;#heapq-Heap-queue-algorithm&quot; class=&quot;headerlink&quot; title=&quot;heapq - Heap queue algorithm&quot;&gt;&lt;/a&gt;heapq 
    
    </summary>
    
      <category term="Programming" scheme="http://zhenv5.github.io/categories/Programming/"/>
    
    
      <category term="Heap" scheme="http://zhenv5.github.io/tags/Heap/"/>
    
  </entry>
  
</feed>
