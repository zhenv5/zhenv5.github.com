<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zhenv5</title>
  <subtitle>Show me your code</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhenv5.github.io/"/>
  <updated>2016-12-05T21:02:00.021Z</updated>
  <id>http://zhenv5.github.io/</id>
  
  <author>
    <name>zhenv5</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Eigenvalues and Eigenvectors</title>
    <link href="http://zhenv5.github.io/2016/12/05/Linear_Algebra/Linear-Algebra-Eigenvalues-and-Eigenvectors/"/>
    <id>http://zhenv5.github.io/2016/12/05/Linear_Algebra/Linear-Algebra-Eigenvalues-and-Eigenvectors/</id>
    <published>2016-12-05T21:02:00.021Z</published>
    <updated>2016-12-05T21:02:00.021Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Linear-Algebra-Eigenvalues-and-Eigenvectors&quot;&gt;&lt;a href=&quot;#Linear-Algebra-Eigenvalues-and-Eigenvectors&quot; class=&quot;headerlink&quot; title=&quot;Linear Algebra : Eigenvalues and Eigenvectors&quot;&gt;&lt;/a&gt;Linear Algebra : Eigenvalues and Eigenvectors&lt;/h4&gt;&lt;h4 id=&quot;Trace-and-determinant&quot;&gt;&lt;a href=&quot;#Trace-and-determinant&quot; class=&quot;headerlink&quot; title=&quot;Trace and determinant&quot;&gt;&lt;/a&gt;Trace and determinant&lt;/h4&gt;&lt;p&gt;A square matrix $A$ is called invertible if there is a square matrix $B$ of the same size such that $AB = BA = I$, we call $B$ an inverse of $A$.&lt;/p&gt;
&lt;p&gt;An inverse is unique.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;term &lt;em&gt;nonsingular&lt;/em&gt; which means the same as invertible, and &lt;em&gt;singular&lt;/em&gt;, which means the same as noninvertible. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;Eigenvalues-and-eigenvectors&quot;&gt;&lt;a href=&quot;#Eigenvalues-and-eigenvectors&quot; class=&quot;headerlink&quot; title=&quot;Eigenvalues and eigenvectors&quot;&gt;&lt;/a&gt;Eigenvalues and eigenvectors&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;an eigenvector $x$ lies along the same line as $Ax$: $Ax = \lambda x$, The eigenvalue is $\lambda$&lt;/li&gt;
&lt;li&gt;if $Ax = \lambda x$, then $A^2x = \lambda ^2 x$ and $A^{-1}x = \lambda ^ {-1} x$, and $(A+cI)x = (\lambda + c) x$&lt;/li&gt;
&lt;li&gt;if $Ax = \lambda x$, then $(A - \lambda I)x = 0$, and $A - \lambda I$ is singular and $det(A - \lambda I) = 0$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To explain eigenvalues, we first explain eigenvectors. Almost all vectors change direction, when they are multiplied by $A$. &lt;strong&gt;Certain exceptional vector x are in the same direction as &lt;/strong&gt; $Ax$, which are called eigenvectors. &lt;/p&gt;
&lt;p&gt;$$Ax = \lambda x$$&lt;/p&gt;
&lt;p&gt;$$A^nx = \lambda ^ n x$$&lt;/p&gt;
&lt;p&gt;$$(A - \lambda I) x = 0$$&lt;/p&gt;
&lt;p&gt;To solve the eigenvalue problem for an $n$ by $n$ matrix, follow these steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compute the determinant of $A - \lambda I$, which is a polynomial in $\lambda$ of degree $n$&lt;/li&gt;
&lt;li&gt;Find the root of of this polynomial, by solving $det(A - \lambda I) = 0$. The $n$ roots are the $n$ eigenvalues of $A$. They make $A - \lambda I$ singular&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For each eigenvalue $\lambda$, solve $(A - \lambda I)x = 0$ to find eigenvector $x$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The product of the $n$ eigenvalues equals the determinant. The sum of the $n$ eigenvalues equals the sum of the $n$ diagonal entries. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The sum of the entries along the main diagonal is called the &lt;em&gt;trace&lt;/em&gt; of A:&lt;/p&gt;
&lt;p&gt;$$\lambda_1 + \lambda_2 + … + \lambda&lt;em&gt;n = trace = a&lt;/em&gt;{11} + a&lt;em&gt;{22} + … + a&lt;/em&gt;{nn}$$&lt;/p&gt;
&lt;p&gt;Matrices:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Symmetric matrix: $S^T = S$&lt;/li&gt;
&lt;li&gt;Skew-symmetric: $S^T = -S$&lt;/li&gt;
&lt;li&gt;Orthogonal matrix: $Q^TQ = I$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The eigenvectors for all these special matrices are perpendicular &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A and B share the same n independent eigenvectors if and only if $AB = BA$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The eigenvalue of $A^2$ and $A^{-1}$ are $\lambda^2$ and $\lambda^{-1}$, with the same eigenvectors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Power-method-for-approximating-eigenvalues&quot;&gt;&lt;a href=&quot;#Power-method-for-approximating-eigenvalues&quot; class=&quot;headerlink&quot; title=&quot;Power method for approximating eigenvalues&quot;&gt;&lt;/a&gt;Power method for approximating eigenvalues&lt;/h4&gt;&lt;p&gt;Definition of Dominant Eigenvalue and Dominant Eigenvector: Let $\lambda_1$, $\lambda_2$,…, and $\lambda_n$ be the eigenvalues of $n$ x $n$ matrix $A$. $\lambda_1$ is called the dominant eigenvalue of $A$ if $|\lambda_1| &amp;gt; |\lambda_i|$, $i = 2,…,n$.&lt;/p&gt;
&lt;p&gt;The eigenvectors corresponding to $\lambda_1$ are called dominant eigenvectors of $A$.&lt;/p&gt;
&lt;p&gt;Not every matrix has a dominant eigenvalue. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Determining a Eigenvalue from an eigenvector&lt;/strong&gt;: if $x$ is an eigenvector of a matrix $A$, then its corresponding eigenvalue is given by:&lt;/p&gt;
&lt;p&gt;$$\lambda = \frac{Ax \cdot x}{x \cdot x}$$&lt;/p&gt;
&lt;p&gt;Since $x$ is an eigenvector of $A$, $Ax = \lambda x$:&lt;/p&gt;
&lt;p&gt;$$\frac{Ax \cdot x}{x \cdot x} = \frac{\lambda x \cdot x}{x \cdot x} = \lambda$$&lt;/p&gt;
&lt;h5 id=&quot;The-power-method&quot;&gt;&lt;a href=&quot;#The-power-method&quot; class=&quot;headerlink&quot; title=&quot;The power method&quot;&gt;&lt;/a&gt;The power method&lt;/h5&gt;&lt;p&gt;$$x_1 = A x_0$$&lt;/p&gt;
&lt;p&gt;$$x_2 = A x_1 = A^2 x_0$$&lt;/p&gt;
&lt;p&gt;$$x_3 = A x_2 = A^3 x_0$$&lt;/p&gt;
&lt;p&gt;$$x&lt;em&gt;k = A x&lt;/em&gt;{k-1} = A^k x_0$$&lt;/p&gt;
&lt;p&gt;For large powers of $k$, and by properly scaling this sequence, you will see that you obtain a good approximation of the dominant eigenvector of $A$.&lt;/p&gt;
&lt;p&gt;The power method with scaling: One way to accomplish this scaling is to determine the component of $Ax_i$ that has the &lt;strong&gt;largest absolute value&lt;/strong&gt; and multiply the vector $Ax_i$ by the reciprocal of this component. The resulting vector will then have components whose absolute values are less than or equal to $1$. Other scaling techniques are possible. &lt;/p&gt;
&lt;h4 id=&quot;Convergence-of-the-Power-method&quot;&gt;&lt;a href=&quot;#Convergence-of-the-Power-method&quot; class=&quot;headerlink&quot; title=&quot;Convergence of the Power method&quot;&gt;&lt;/a&gt;Convergence of the Power method&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;If $A$ is an $n$ x $n$ diagonalizable matrix with a dominant eigenvalue, then there exists a nonzero vector $x_0$ such that the sequence of vectors given by: $Ax_0$, $A^2x_0$, $A^3x_0$, $A^4x_0$,…, $A^kx_0$,… approaches a multiple of the dominant eigenvector of $A$. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because $A$ is diagonalizable, it has $n$ linearly independent eigenvectors $x_1$, $x_2$,…,$x_n$ with corresponding eigenvalue $\lambda_1$, $\lambda_2$,…,$\lambda_n$. Assume that these eigenvalues are ordered so that $\lambda_1$ is the dominant eigenvalue. Because the $n$ eigenvectors $x_1$, $x_2$, …, $x_n$ are linearly independent, they must form a basis for $R^n$. For the initial approximation $x_0$, choose a non-zero vector such that:&lt;/p&gt;
&lt;p&gt;$$x_0 = c_1 x_1 + c_2x_2 + … + c_nx_n$$&lt;/p&gt;
&lt;p&gt;has non-zero leading coefficients. If $c_1 = 0$, the power method may not converge, and a different $x_0$ must be used as the initial approximation. &lt;/p&gt;
&lt;p&gt;$$Ax_0 = A(c_1 x_1 + c_2x_2 + … + c_nx_n)$$ &lt;/p&gt;
&lt;p&gt;$$= c_1 A x_1 + c_2 A x_2 + … + c_n A x_n)$$&lt;/p&gt;
&lt;p&gt; $$= c_1 \lambda_1 x_1 + c_2 \lambda_2 x_2 + … + c_n \lambda_n x_n)$$&lt;/p&gt;
&lt;p&gt;Repeated multiplication of both sides of the equation by A produces:&lt;/p&gt;
&lt;p&gt;$$A^kx_0 = c_1 \lambda_1^k x_1 + c_2 \lambda_2^k x_2 + … + c_n \lambda_n^k x_n$$&lt;/p&gt;
&lt;p&gt;$$ = \lambda_1^k (c_1x_1 + c_2x_2{(\frac{\lambda_2}{\lambda_1})}^k + … + c_nx_n {(\frac{\lambda_2}{\lambda_1})}^k)$$&lt;/p&gt;
&lt;p&gt;As $k$ approaches infinity, this implies the approximation :&lt;/p&gt;
&lt;p&gt;$$A^kx_0 = \lambda_1^kc_1x_1$$&lt;/p&gt;
&lt;p&gt;and $c_1 != 0$.&lt;/p&gt;
&lt;p&gt;The power method will converge quickly if $\lambda_2 / \lambda_1$ is small, and slowly if the ratio is close to $1$. &lt;/p&gt;
&lt;p&gt;Another algorithm to compute eigenvalues and eigenvectors is named &lt;strong&gt;QR algorithm&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A visualization demo of eigenvector and eigenvalue: &lt;a href=&quot;http://setosa.io/ev/eigenvectors-and-eigenvalues/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eigenvectors and Eigenvalues&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Compute-the-second-largest-eigenvalues&quot;&gt;&lt;a href=&quot;#Compute-the-second-largest-eigenvalues&quot; class=&quot;headerlink&quot; title=&quot;Compute the second largest eigenvalues&quot;&gt;&lt;/a&gt;Compute the second largest eigenvalues&lt;/h4&gt;&lt;p&gt;The largest eigenvalue $\lambda_1$ and eigenvector $v&lt;em&gt;1$ by iterating $x&lt;/em&gt;{n+1} = \frac{Ax_n}{||Ax_n||}$ with a random initial $x_0$. Once we find a good approximation for $v_1$, we can consider $A = A - \frac{\lambda_1}{||x_1||^2}x_1x_1^T$. The new matrix is orthogonal to $v_1$. Use the power method on $A$ again, which will reveal $v_2$, an eigenvector of a largest eigenvalue of $A$, and continue. &lt;/p&gt;
&lt;h4 id=&quot;Markov-Matrix&quot;&gt;&lt;a href=&quot;#Markov-Matrix&quot; class=&quot;headerlink&quot; title=&quot;Markov Matrix&quot;&gt;&lt;/a&gt;Markov Matrix&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;Markov matrix&lt;/strong&gt;: whose entries are positive and whose columns added up to one. It always has $\lambda = 1$ as its largest eigenvalue. That means that there is a value of $v_t$ for which:&lt;/p&gt;
&lt;p&gt;$$Av_t = \lambda v_t = v_t$$&lt;/p&gt;
&lt;p&gt;It’s  a steady state. &lt;/p&gt;
&lt;h4 id=&quot;Properties-of-Eigenvectors-and-Eigenvalues&quot;&gt;&lt;a href=&quot;#Properties-of-Eigenvectors-and-Eigenvalues&quot; class=&quot;headerlink&quot; title=&quot;Properties of Eigenvectors and Eigenvalues&quot;&gt;&lt;/a&gt;Properties of Eigenvectors and Eigenvalues&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Eigenvectors can only be found for square matrices, not every square matrix has eigenvectors &lt;/li&gt;
&lt;li&gt;All the eigenvectors of a matrix are perpendicular (orthogonal)&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Linear-Algebra-Eigenvalues-and-Eigenvectors&quot;&gt;&lt;a href=&quot;#Linear-Algebra-Eigenvalues-and-Eigenvectors&quot; class=&quot;headerlink&quot; title=&quot;Linear
    
    </summary>
    
      <category term="Linear Algebra" scheme="http://zhenv5.github.io/categories/Linear-Algebra/"/>
    
    
      <category term="Eigenvalue" scheme="http://zhenv5.github.io/tags/Eigenvalue/"/>
    
      <category term="Eigenvector" scheme="http://zhenv5.github.io/tags/Eigenvector/"/>
    
      <category term="Algebra" scheme="http://zhenv5.github.io/tags/Algebra/"/>
    
  </entry>
  
  <entry>
    <title>Tensor Decomposition and Recommender Systems</title>
    <link href="http://zhenv5.github.io/2016/09/30/Machine-Learning-and-Data-Mining/Tensor-Decomposition-and-Recommender-Systems/"/>
    <id>http://zhenv5.github.io/2016/09/30/Machine-Learning-and-Data-Mining/Tensor-Decomposition-and-Recommender-Systems/</id>
    <published>2016-09-30T20:38:48.130Z</published>
    <updated>2016-04-08T01:57:26.000Z</updated>
    
    <content type="html">&lt;p&gt;Mainly from paper: &lt;a href=&quot;http://arxiv.org/pdf/1603.06038v1.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensor Decomposition and Recommender Systems&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Tucker-Decomposition&quot;&gt;&lt;a href=&quot;#Tucker-Decomposition&quot; class=&quot;headerlink&quot; title=&quot;Tucker Decomposition&quot;&gt;&lt;/a&gt;Tucker Decomposition&lt;/h4&gt;&lt;p&gt;Tensor $\mathcal{T}$ can be factorized as: $\mathcal{T} = \mathcal{G} \times_1 U \times_2 V \times_3 W$ where &lt;em&gt;U&lt;/em&gt;, &lt;em&gt;V&lt;/em&gt; and &lt;em&gt;W&lt;/em&gt; are orthogonal matrices, and represent embedding of corresponding objects into a lower-dimensional latent factors space with dimensionalities  &lt;em&gt;r1&lt;/em&gt;, &lt;em&gt;r2&lt;/em&gt; and &lt;em&gt;r3&lt;/em&gt; correspondingly. The core tensor $\mathcal{G}$ defines the form and the strength of multilinear relations between all three entities in the latent feature space.&lt;/p&gt;
&lt;h4 id=&quot;Online-Updates&quot;&gt;&lt;a href=&quot;#Online-Updates&quot; class=&quot;headerlink&quot; title=&quot;Online Updates&quot;&gt;&lt;/a&gt;Online Updates&lt;/h4&gt;&lt;p&gt;To deal with the problem of real-time recommendations, the authors adopt a well known &lt;em&gt;folding-in&lt;/em&gt; method [Information retrieval using a singular value decomposition model of latent semantic structure] to a higher order case. The folding-in procedure helps to quickly embed a previously unseen entity into the latent features space without recomputing the whole method.&lt;/p&gt;
&lt;p&gt;Nevertheless, this typically leads to a loss of orthogonality in factors and negatively impacts the accuracy of the model in the long run. This can be avoided with an &lt;em&gt;incremental SVD update&lt;/em&gt;, which for the matrices with missing entries was initially proposed by [Incremental singular value decomposition of uncertain data with missing values].&lt;/p&gt;
&lt;p&gt;A different incremental HOSVD-based model is proposed in [An Incremental Factorization Approach for Web Service Recommendation] for a highly dynamic, evolving environment, which used an extension of a two-dimensional incremental approach from [Incremental learning for robust visual tracking].&lt;/p&gt;
&lt;h4 id=&quot;RTF-and-PITF&quot;&gt;&lt;a href=&quot;#RTF-and-PITF&quot; class=&quot;headerlink&quot; title=&quot;RTF and PITF&quot;&gt;&lt;/a&gt;RTF and PITF&lt;/h4&gt;&lt;p&gt;Ranking with TF model (RTF)[69] and more elaborate pairwise interaction TF (PITF)[70] model emphasize, all missing entries can be split into 2 groups: the true negative feedback and unknown values.&lt;/p&gt;
&lt;p&gt;RTF model uses the Tucker format, it aims to directly maximizing AUC measure.&lt;/p&gt;
&lt;p&gt;The PITF model is built on top of RTF. It adopts Bayesian Personalized Ranking (BPR) technique proposed for MF case in [67] to the ranking approach.&lt;/p&gt;
&lt;h4 id=&quot;Improving-the-prediction-quality&quot;&gt;&lt;a href=&quot;#Improving-the-prediction-quality&quot; class=&quot;headerlink&quot; title=&quot;Improving the prediction quality&quot;&gt;&lt;/a&gt;Improving the prediction quality&lt;/h4&gt;&lt;p&gt;Some problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;high data sparsity typically leas to a less accurate predictive models&lt;/li&gt;
&lt;li&gt;tag ambiguity and redundancy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CubeRec[Cubic Analysis of Social Bookmarking for Personalized Recommendation] proose a clustering-based separation mechanism, which builds clusters of triplets (user,item,tag) based on the proximity of tags derived from the item-tag matrix derived from the item-tag matrix. After the initial problem is split into a number of sub-problems(corresponding to clusters) of a smaller size and hence with dense data. Every subproblem is then factorized with the HOSVD similarly to [83], and the resulting model is constructed as a combination of all the smaller TF models.&lt;/p&gt;
&lt;p&gt;Clustering-based HOSVD model (ClusterHOSVD)[Item Recommendation by Combing Semantically Enhanced Tag Clustering With Tensor HOSVD] also employ clustering approach. However, instead of splitting the problem, they replace tags by tag clusters and apply the HOSVD directly to the modified data consisting of (user,item,tag cluster) triplets.&lt;/p&gt;
&lt;h4 id=&quot;Usefule-Links&quot;&gt;&lt;a href=&quot;#Usefule-Links&quot; class=&quot;headerlink&quot; title=&quot;Usefule Links&quot;&gt;&lt;/a&gt;Usefule Links&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.offconvex.org/2015/12/17/tensor-decompositions/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensor Methods in Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mainly from paper: &lt;a href=&quot;http://arxiv.org/pdf/1603.06038v1.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tensor Decomposition and Recommender Sy
    
    </summary>
    
      <category term="Linear Algebra" scheme="http://zhenv5.github.io/categories/Linear-Algebra/"/>
    
    
      <category term="tensor" scheme="http://zhenv5.github.io/tags/tensor/"/>
    
      <category term="recommender system" scheme="http://zhenv5.github.io/tags/recommender-system/"/>
    
  </entry>
  
  <entry>
    <title>Data Visualization Tools</title>
    <link href="http://zhenv5.github.io/2016/09/30/Machine-Learning-and-Data-Mining/Data-Visualization-Tools/"/>
    <id>http://zhenv5.github.io/2016/09/30/Machine-Learning-and-Data-Mining/Data-Visualization-Tools/</id>
    <published>2016-09-30T20:36:02.595Z</published>
    <updated>2016-04-11T03:26:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wentu.io/showcase&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文图&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zhuanlan.zhihu.com/hemingke&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数据冰山知乎专栏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wentu.io/showcase&quot; target=&quot;_blank&quot; r
    
    </summary>
    
      <category term="Visualization" scheme="http://zhenv5.github.io/categories/Visualization/"/>
    
    
      <category term="visualization" scheme="http://zhenv5.github.io/tags/visualization/"/>
    
  </entry>
  
  <entry>
    <title>Deep Learning Resources</title>
    <link href="http://zhenv5.github.io/2016/09/30/Machine-Learning-and-Data-Mining/Deep-Learning-Resources/"/>
    <id>http://zhenv5.github.io/2016/09/30/Machine-Learning-and-Data-Mining/Deep-Learning-Resources/</id>
    <published>2016-09-30T20:35:54.768Z</published>
    <updated>2016-04-13T02:23:41.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Deep-Learning-Text-Book&quot;&gt;&lt;a href=&quot;#Deep-Learning-Text-Book&quot; class=&quot;headerlink&quot; title=&quot;Deep Learning Text Book&quot;&gt;&lt;/a&gt;Deep Learning Text Book&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deeplearningbook.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning Text Book&lt;/a&gt; by Ian Goodfellow, Yoshua Bengio and Aaron Courville&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://deeplearning.net/tutorial/deeplearning.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning Tutorial&lt;/a&gt; by LISA Lab&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://research.microsoft.com/pubs/209355/DeepLearning-NowPublishing-Vol7-SIG-039.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning Methods and Applications&lt;/a&gt; by Li Deng and Dong Yu.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://webcourse.cs.technion.ac.il/232601/Spring2016/en/ho.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep learning for natural language processing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Notes&quot;&gt;&lt;a href=&quot;#Notes&quot; class=&quot;headerlink&quot; title=&quot;Notes&quot;&gt;&lt;/a&gt;Notes&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://randomekek.github.io/deep/deeplearning.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deep Learning for Beginners&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Open-sources&quot;&gt;&lt;a href=&quot;#Open-sources&quot; class=&quot;headerlink&quot; title=&quot;Open sources&quot;&gt;&lt;/a&gt;Open sources&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://keras.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Keras: deep learning library for theano and tensorflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Games-based-on-deep-learning&quot;&gt;&lt;a href=&quot;#Games-based-on-deep-learning&quot; class=&quot;headerlink&quot; title=&quot;Games based on deep learning&quot;&gt;&lt;/a&gt;Games based on deep learning&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bitwise-ben/Fruit/blob/master/qlearning.py.ipynb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Q-learning example in Keras&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Deep-Learning-Text-Book&quot;&gt;&lt;a href=&quot;#Deep-Learning-Text-Book&quot; class=&quot;headerlink&quot; title=&quot;Deep Learning Text Book&quot;&gt;&lt;/a&gt;Deep Learning Tex
    
    </summary>
    
      <category term="Deep Learning" scheme="http://zhenv5.github.io/categories/Deep-Learning/"/>
    
    
      <category term="deep learning" scheme="http://zhenv5.github.io/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>Text progress bar library for Python</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Text-Progress-Bar-Library-for-Python/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Text-Progress-Bar-Library-for-Python/</id>
    <published>2016-09-30T20:28:33.425Z</published>
    <updated>2016-02-15T22:13:04.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;progressbar&quot;&gt;&lt;a href=&quot;#progressbar&quot; class=&quot;headerlink&quot; title=&quot;progressbar&quot;&gt;&lt;/a&gt;progressbar&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/niltonvolpato/python-progressbar&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python-progressbar&lt;/a&gt; is a text progress bar library for python.&lt;/p&gt;
&lt;h3 id=&quot;examples&quot;&gt;&lt;a href=&quot;#examples&quot; class=&quot;headerlink&quot; title=&quot;examples&quot;&gt;&lt;/a&gt;examples&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; progressbar &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ProgressBar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pbar = ProgressBar()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; pbar(range(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;more examples can be viewed &lt;a href=&quot;https://github.com/niltonvolpato/python-progressbar/blob/master/examples.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;examples.py&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;progressbar&quot;&gt;&lt;a href=&quot;#progressbar&quot; class=&quot;headerlink&quot; title=&quot;progressbar&quot;&gt;&lt;/a&gt;progressbar&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/nilton
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Module" scheme="http://zhenv5.github.io/tags/Module/"/>
    
      <category term="Progressbar" scheme="http://zhenv5.github.io/tags/Progressbar/"/>
    
  </entry>
  
  <entry>
    <title>Usage of Subprocess Module in Python</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Usage-of-Subprocess-Module-in-Python/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Usage-of-Subprocess-Module-in-Python/</id>
    <published>2016-09-30T20:28:33.413Z</published>
    <updated>2016-02-15T05:11:44.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;subprocess-module-in-python&quot;&gt;&lt;a href=&quot;#subprocess-module-in-python&quot; class=&quot;headerlink&quot; title=&quot;subprocess module in python&quot;&gt;&lt;/a&gt;subprocess module in python&lt;/h3&gt;&lt;p&gt;The subprocess module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. It intends to replace several older modules and functions such as: os.system, os.spawn, os.popen, popen2 and commands. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/subprocess.html#module-subprocess&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python document: subprocess - subprocess management&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Running-via-the-shell&quot;&gt;&lt;a href=&quot;#Running-via-the-shell&quot; class=&quot;headerlink&quot; title=&quot;Running via the shell&quot;&gt;&lt;/a&gt;Running via the shell&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; subprocess&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.call(&lt;span class=&quot;string&quot;&gt;&#39;ls -al&#39;&lt;/span&gt;,shell=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.check_call([&lt;span class=&quot;string&quot;&gt;&#39;ls&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;-al&#39;&lt;/span&gt;])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.check_output(&lt;span class=&quot;string&quot;&gt;&#39;ls -al&#39;&lt;/span&gt;,shell=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.check_output([&lt;span class=&quot;string&quot;&gt;&#39;ls&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;-al&#39;&lt;/span&gt;])&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Above are basic usages.&lt;/p&gt;
&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;ls_output&lt;/span&gt; = subprocess.check_output([&lt;span class=&quot;string&quot;&gt;&#39;ls&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;-al&#39;&lt;/span&gt;])&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;ls_output&lt;/span&gt; = subprocess.check_call([&lt;span class=&quot;string&quot;&gt;&#39;ls&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;-al&#39;&lt;/span&gt;])&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The first item in list is the executable and rest are its command line arguments. &lt;/p&gt;
&lt;p&gt;Both &lt;strong&gt;call&lt;/strong&gt; and &lt;strong&gt;check_call&lt;/strong&gt; can return the return code after running the command. The difference is check_call raises a CalledProcessError if the return code is non-zero.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.call(&lt;span class=&quot;string&quot;&gt;&#39;ls -al&#39;&lt;/span&gt;,shell=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.check_output(&lt;span class=&quot;string&quot;&gt;&#39;ls -al&#39;&lt;/span&gt;,shell=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ls_output = subprocess.check_output([&lt;span class=&quot;string&quot;&gt;&#39;ls&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;-al&#39;&lt;/span&gt;]])&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;check_ouput&lt;/strong&gt; can run command with arguments and return its output as a byte string. &lt;/p&gt;
&lt;p&gt;With &lt;em&gt;shell&lt;/em&gt; setting to &lt;em&gt;True&lt;/em&gt;, we can pass the commands as a &lt;em&gt;string&lt;/em&gt; not a &lt;em&gt;list&lt;/em&gt;. The program actually gets executed is the OS default shell, &lt;em&gt;/bin/sh&lt;/em&gt; on linux and &lt;em&gt;cmd.exe&lt;/em&gt; on windows. This can be changed with the &lt;em&gt;executable&lt;/em&gt; argument.&lt;/p&gt;
&lt;h3 id=&quot;reference&quot;&gt;&lt;a href=&quot;#reference&quot; class=&quot;headerlink&quot; title=&quot;reference&quot;&gt;&lt;/a&gt;reference&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://sharats.me/the-ever-useful-and-neat-subprocess-module.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The ever useful and neat subprocess module&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;subprocess-module-in-python&quot;&gt;&lt;a href=&quot;#subprocess-module-in-python&quot; class=&quot;headerlink&quot; title=&quot;subprocess module in python&quot;&gt;&lt;/a&gt;subpr
    
    </summary>
    
      <category term="Programming" scheme="http://zhenv5.github.io/categories/Programming/"/>
    
    
      <category term="Subprocess" scheme="http://zhenv5.github.io/tags/Subprocess/"/>
    
      <category term="Module" scheme="http://zhenv5.github.io/tags/Module/"/>
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>OSU CCSS Compliance Notes - Ubuntu</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/OSU-MCSS-Compliance-Notes-Ubuntu/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/OSU-MCSS-Compliance-Notes-Ubuntu/</id>
    <published>2016-09-30T20:27:01.062Z</published>
    <updated>2016-02-23T03:02:30.000Z</updated>
    
    <content type="html">&lt;p&gt;This script aims to install and check OSU MCSS script automatically.&lt;/p&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h3&gt;&lt;p&gt;This error occurs frequently:&lt;/p&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;ANTI-MALWARE&lt;/span&gt;:  The anti-malware script found viruses.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;livecodeserver&quot;&gt;Check &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/anti-malware.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;file&lt;/span&gt;.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Once investigated, remove this message &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; deleting this echo &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;from&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/etc/bash.bashrc (should be near &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;MCSS:  The MCSS script check failed.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Check /var/&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;/mcss.&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Once investigated, remove this message &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; deleting &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; this echo &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;from&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/etc/bash.bashrc (should be near &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;).&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;The &lt;span class=&quot;keyword&quot;&gt;system&lt;/span&gt; will be shutdown &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; days &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; this is &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; fixed.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;I have to follow &lt;a href=&quot;https://cse.osu.edu/computing-services/security/ccss-certification/ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CCSS Compliance Notes: Ubuntu&lt;/a&gt; to install and setup. It’s very boring.&lt;/p&gt;
&lt;p&gt;We have learned how to use subprocess recently, why don’t we write a script to do it automatically?&lt;/p&gt;
&lt;p&gt;Not familiar with &lt;a href=&quot;https://docs.python.org/2/library/subprocess.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;subprocess&lt;/a&gt;: click &lt;a href=&quot;http://www.zhenv5.info/2016/02/21/Python/Python-Module-subprocess/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;subprocess, a Python module can replace shell&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run&quot;&gt;&lt;a href=&quot;#Run&quot; class=&quot;headerlink&quot; title=&quot;Run&quot;&gt;&lt;/a&gt;Run&lt;/h3&gt;&lt;p&gt;The python code is very simple:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; subprocess&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run_command&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(command)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; command&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	p = subprocess.Popen(command,shell = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, stdout = subprocess.PIPE)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	o = p.communicate()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; o[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initial&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo apt-get clean&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo apt-get update&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo apt-get -y --purge dist-upgrade&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; os.path.exists(&lt;span class=&quot;string&quot;&gt;&quot;ubuntu-mcss-1.3/&quot;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; os.path.exists(&lt;span class=&quot;string&quot;&gt;&quot;ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;download ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			run_command(&lt;span class=&quot;string&quot;&gt;&quot;wget http://web.cse.ohio-state.edu/cs/security/ccss/resources/ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			run_command(&lt;span class=&quot;string&quot;&gt;&quot;tar -vxzf ubuntu-mcss-1.3.tar.gz&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	os.chdir(&lt;span class=&quot;string&quot;&gt;&quot;ubuntu-mcss-1.3/&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo ./install.sh&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	run_command(&lt;span class=&quot;string&quot;&gt;&quot;sudo ./mcss -i&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;Finished  setups&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	initial()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Make sure that you have followed instructions on &lt;a href=&quot;https://cse.osu.edu/computing-services/security/ccss-certification/ubuntu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CCSS Compliance Notes: Ubuntu&lt;/a&gt; at the first time. After that you can use above codes whenever you meet MCSS problem.&lt;/p&gt;
&lt;p&gt;Updates of codes can be viewed at Githup: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/Code/osu-mcss.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;osu-mcss.py&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This script aims to install and check OSU MCSS script automatically.&lt;/p&gt;
&lt;h3 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot;
    
    </summary>
    
      <category term="Ubuntu" scheme="http://zhenv5.github.io/categories/Ubuntu/"/>
    
    
      <category term="Subprocess" scheme="http://zhenv5.github.io/tags/Subprocess/"/>
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Crontab</title>
    <link href="http://zhenv5.github.io/2016/09/30/Others/Crontab-Run-Scripts-Automically/"/>
    <id>http://zhenv5.github.io/2016/09/30/Others/Crontab-Run-Scripts-Automically/</id>
    <published>2016-09-30T20:26:40.174Z</published>
    <updated>2016-04-15T18:18:44.000Z</updated>
    
    <content type="html">&lt;p&gt;I wrote a python script to solve the MCSS problem. Now I try to run this script daily with the help of &lt;strong&gt;crontab&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;View-Files&quot;&gt;&lt;a href=&quot;#View-Files&quot; class=&quot;headerlink&quot; title=&quot;View Files&quot;&gt;&lt;/a&gt;View Files&lt;/h3&gt;&lt;p&gt;There are several files such as &lt;em&gt;/etc/cron.daily&lt;/em&gt;, &lt;em&gt;/etc/cron.hourly&lt;/em&gt;, &lt;em&gt;/etc/cron.monthly&lt;/em&gt;, &lt;em&gt;/etc/cron.weekly&lt;/em&gt; or &lt;em&gt;/etc/crontab&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;We can view particular user’s &lt;em&gt;crontab&lt;/em&gt; by:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo crontab &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Add-Commands&quot;&gt;&lt;a href=&quot;#Add-Commands&quot; class=&quot;headerlink&quot; title=&quot;Add Commands&quot;&gt;&lt;/a&gt;Add Commands&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Open file&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo vi &lt;span class=&quot;regexp&quot;&gt;/etc/&lt;/span&gt;crontab&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Add Command&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight basic&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;30 &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; * * * root python script.py &amp;gt;&lt;span class=&quot;keyword&quot;&gt;log&lt;/span&gt;.txt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It will run &lt;em&gt;python script.py&lt;/em&gt; every 7:30 AM.&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I wrote a python script to solve the MCSS problem. Now I try to run this script daily with the help of &lt;strong&gt;crontab&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 
    
    </summary>
    
      <category term="Ubuntu" scheme="http://zhenv5.github.io/categories/Ubuntu/"/>
    
    
      <category term="Crontab" scheme="http://zhenv5.github.io/tags/Crontab/"/>
    
  </entry>
  
  <entry>
    <title>Delete Punctuation in Sentences</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Delete-Punctuation-in-Sentences/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Delete-Punctuation-in-Sentences/</id>
    <published>2016-09-30T20:26:36.202Z</published>
    <updated>2016-02-15T22:14:20.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Delete-Punctuation-in-Sentences&quot;&gt;&lt;a href=&quot;#Delete-Punctuation-in-Sentences&quot; class=&quot;headerlink&quot; title=&quot;Delete Punctuation in Sentences&quot;&gt;&lt;/a&gt;Delete Punctuation in Sentences&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;string.punctuation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;String of ASCII characters which are considered&lt;br&gt;punctuation characters in the C locale.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string.translate(s, table[, deletechars])&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Delete all characters from s that are in deletechars (if present),&lt;br&gt;and then translate the characters using table, which must be a 256-character&lt;br&gt;string giving the translation for each character value, indexed by its ordinal.&lt;br&gt;If table is None, then only the character deletion step is performed.&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; string&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;delset = string.punctuation&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;line = &lt;span class=&quot;string&quot;&gt;&quot;Hello, World. This is Python!!!!!!! :)&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l = line.translate(&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,delset)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; line&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l = l.lower()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;word_list = l.split()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; word_list&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;delset2 = delset + string.digits&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; delset&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;line = &lt;span class=&quot;string&quot;&gt;&quot;Hell2o, 1Word, This is 3 Python! (-)&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l1 = line.translate(&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;,delset)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Hell2o 1Word This is 3 Python&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l2 = line.translate(&lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;, delset2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Hello Word This is  Python&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/Code/string_translate.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/string.html#string.translate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Delete-Punctuation-in-Sentences&quot;&gt;&lt;a href=&quot;#Delete-Punctuation-in-Sentences&quot; class=&quot;headerlink&quot; title=&quot;Delete Punctuation in Sentence
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="String" scheme="http://zhenv5.github.io/tags/String/"/>
    
      <category term="Punctuation" scheme="http://zhenv5.github.io/tags/Punctuation/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to Heap</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Heap-and-Heap%20-Queue-Algorithm/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Heap-and-Heap -Queue-Algorithm/</id>
    <published>2016-09-30T20:26:09.350Z</published>
    <updated>2016-02-15T22:14:04.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;heapq-Heap-queue-algorithm&quot;&gt;&lt;a href=&quot;#heapq-Heap-queue-algorithm&quot; class=&quot;headerlink&quot; title=&quot;heapq - Heap queue algorithm&quot;&gt;&lt;/a&gt;heapq - Heap queue algorithm&lt;/h3&gt;&lt;p&gt;heapq is a standard library in Python, documentation is here: &lt;a href=&quot;https://docs.python.org/2/library/heapq.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;heapq&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;heapq maintains a min-heap. As we know min-heap is a binary tree for which parent node has a value less than or equal to any of its children. This implementation can use arrays. If the parent node’s index is &lt;em&gt;k&lt;/em&gt;, the left child will be &lt;em&gt;2k+1&lt;/em&gt;, and the right child will be &lt;em&gt;2k+2&lt;/em&gt;, counting element from 0.&lt;/p&gt;
&lt;h4 id=&quot;Functions&quot;&gt;&lt;a href=&quot;#Functions&quot; class=&quot;headerlink&quot; title=&quot;Functions&quot;&gt;&lt;/a&gt;Functions&lt;/h4&gt;&lt;p&gt;It provides following useful functions, detailed information can by found in the documentation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;heapq.heapify(x): transform list x into a heap, in-place, in linear time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.push(heap,item): push the value item onto the heap, maintaining the heap invariant&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.pop(heap): pop and return the smallest item from the heap, maintaining the heap invariant. To access the smallest item without popping it, use heap[0]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.pushpop(heap,item): push item onto the heap and return the smallest item from the heap. It runs more efficiently than heappush(heap,item) followed by a separate call to heappop(heap).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.nlargest(n,iterableItems): return a list with the n largest elements from the dataset defined by iterableItems. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;heapq.nsmallest(n,iterableItems): return a list with the smallest elements from the dataset defined by iterableItems.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Examples&quot;&gt;&lt;a href=&quot;#Examples&quot; class=&quot;headerlink&quot; title=&quot;Examples&quot;&gt;&lt;/a&gt;Examples&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; heapq&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;h = [&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;121&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;87&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;heapq.heapify(h)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;heapq.heappush(h,&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;a =heapq.heappop(h)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;656&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;large = heapq.nlargest(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,l)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; large&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;small = heapq.nsmallest(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,l)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; small&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;``` &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;**heapsort** can be implemented by pushing all values onto a heap &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; then poping off the smallest values one at a time:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;```Python&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;heapsort&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(iterable)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	h = []&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; iterable:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		heapq.heappush(h,item)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; h&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [heapq.heappop(h) &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(len(h))]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;656&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-2&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;l1 = heapsort(l)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; l1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Use-Min-Heap-to-find-the-k-largest-smllest-elements-in-an-array&quot;&gt;&lt;a href=&quot;#Use-Min-Heap-to-find-the-k-largest-smllest-elements-in-an-array&quot; class=&quot;headerlink&quot; title=&quot;Use Min-Heap to find the k largest(smllest) elements in an array&quot;&gt;&lt;/a&gt;Use Min-Heap to find the k largest(smllest) elements in an array&lt;/h3&gt;&lt;p&gt;We can use heapq.nlargest() and heapq.nsmallest() functions to find the k largest/smallest elements in an iterable list.&lt;/p&gt;
&lt;p&gt;What’s the idea behind these functions?&lt;/p&gt;
&lt;p&gt;Procedures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a Min Heap of the first k-elements (array[0] - array[k-1]). O(k)&lt;/li&gt;
&lt;li&gt;Find the k-largest: for each element( after the k-th element in the array from k to n-1), compare it with the root: if the element is greater than the root then push this element onto this heap, else ignore it. O((n-k)log(k))&lt;/li&gt;
&lt;li&gt;Find the k-smallest: for each element, compare it with the root, if the element is smaller than the root then push this element onto this heap, else ignore it. O((n-k)log(k))&lt;/li&gt;
&lt;li&gt;Finally, heap has k largest/smallest elements and root of heap is the k-th largest/smallest element.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Time complexity: O((n-k)log(k) + k) without sorted output. If sorted output is needed then O(((n-k)log(k) + k )+ klog(k)) = O(nlog(k) + k).&lt;/p&gt;
&lt;h3 id=&quot;Build-your-own-binary-heap&quot;&gt;&lt;a href=&quot;#Build-your-own-binary-heap&quot; class=&quot;headerlink&quot; title=&quot;Build your own binary heap&quot;&gt;&lt;/a&gt;Build your own binary heap&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://interactivepython.org/runestone/static/pythonds/Trees/BinaryHeapImplementation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Binary Heap Implementation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;updates can be viewed here &lt;a href=&quot;http://zhenv5.farbox.com/post/python/heap-queue-algorithms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;updates&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;heapq-Heap-queue-algorithm&quot;&gt;&lt;a href=&quot;#heapq-Heap-queue-algorithm&quot; class=&quot;headerlink&quot; title=&quot;heapq - Heap queue algorithm&quot;&gt;&lt;/a&gt;heapq 
    
    </summary>
    
      <category term="Programming" scheme="http://zhenv5.github.io/categories/Programming/"/>
    
    
      <category term="Heap" scheme="http://zhenv5.github.io/tags/Heap/"/>
    
  </entry>
  
  <entry>
    <title>Power your Githup Pages with Hexo</title>
    <link href="http://zhenv5.github.io/2016/09/30/Power-Your-Github-Pages-with-Hexo/"/>
    <id>http://zhenv5.github.io/2016/09/30/Power-Your-Github-Pages-with-Hexo/</id>
    <published>2016-09-30T20:24:14.864Z</published>
    <updated>2016-02-15T21:34:04.000Z</updated>
    
    <content type="html">&lt;p&gt;Hexo is a very powerful blog framework, which can be applied to your own github pages. &lt;/p&gt;
&lt;h3 id=&quot;Requirements&quot;&gt;&lt;a href=&quot;#Requirements&quot; class=&quot;headerlink&quot; title=&quot;Requirements&quot;&gt;&lt;/a&gt;Requirements&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;Hexo&lt;/li&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Node-js&quot;&gt;&lt;a href=&quot;#Node-js&quot; class=&quot;headerlink&quot; title=&quot;Node.js&quot;&gt;&lt;/a&gt;Node.js&lt;/h3&gt;&lt;p&gt; Download Source code of &lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; Read the readme file, and build:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;./configure&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;li&gt;sudo make install&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then remember to update npm by:&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo &lt;span class=&quot;built_in&quot;&gt;npm&lt;/span&gt; install &lt;span class=&quot;built_in&quot;&gt;npm&lt;/span&gt; -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Other ways to install Node.js: &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nvm to install Node.js&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h3&gt;&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install hexo-&lt;span class=&quot;keyword&quot;&gt;cli&lt;/span&gt; -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Change to your favorite directory, create folder:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight ebnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo init&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Install dependency:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Create static files:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Run Server&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Open your web browser, type localhost:4000 to view your local blog. Use Ctrl-C to stop the server.&lt;/p&gt;
&lt;h3 id=&quot;Deploy-Hexo-to-Github&quot;&gt;&lt;a href=&quot;#Deploy-Hexo-to-Github&quot; class=&quot;headerlink&quot; title=&quot;Deploy Hexo to Github&quot;&gt;&lt;/a&gt;Deploy Hexo to Github&lt;/h3&gt;&lt;p&gt;Create your own repository: &lt;a href=&quot;zhenv5.github.io&quot;&gt;demo&lt;/a&gt;, name is: zhenv5.github.io.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edit _config.yml file in your Hexo directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# Deployment&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;## Docs: https:&lt;span class=&quot;comment&quot;&gt;//hexo.io/docs/deployment.html&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;deploy:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  type:&lt;/span&gt; git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  repository:&lt;/span&gt; https:&lt;span class=&quot;comment&quot;&gt;//github.com/zhenv5/zhenv5.github.com&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  branch:&lt;/span&gt; master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If error (for example can not find git) occurs, install &lt;a href=&quot;https://hexo.io/zh-cn/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-deployer-git&lt;/a&gt; in the root folder of Hexo:&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Save file and deploy changes:&lt;/p&gt;
&lt;figure class=&quot;highlight verilog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;generate&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo deploy&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Generate and deploy commands can also be used as:&lt;/p&gt;
&lt;figure class=&quot;highlight ebnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;hexo d -g&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Some bugs may occur: From  &lt;a href=&quot;http://zipperary.com/2013/05/28/hexo-guide-2/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo系列教程：（二）搭建hexo博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt;&lt;br&gt;在github部署完成之后，马上访问可能出现404错误，这是正常的，（最多）等待十分钟左右就可以访问了。如果还不行，那很可能是 github 发送给你的验证邮件你没有打开看，据多方反映，验证后就没问题了。&lt;br&gt;如果在hexo d之后出现fatal: ‘username.github.io’ does not appear to be a git repository，一是检查 repo 的名字是否合乎规范、是否含有大写字母、config.yml 中的 deploy 配置是否正确，二是把 git bash 关掉，重新打开再执行命令。&lt;/p&gt;
&lt;p&gt;You can also preview your blog locally, by assigning a port:&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo server -&lt;span class=&quot;selector-tag&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The default open port is 4000, whey you type:&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo &lt;span class=&quot;keyword&quot;&gt;server&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Sometimes, it may remind you that port 4000 is used. In case that you can assign port 5000 to Hexo Server. And use localhost:5000 to preview your blog. &lt;/p&gt;
&lt;h3 id=&quot;Post-blogs&quot;&gt;&lt;a href=&quot;#Post-blogs&quot; class=&quot;headerlink&quot; title=&quot;Post blogs&quot;&gt;&lt;/a&gt;Post blogs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Set categories in your post:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight avrasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;categories:&lt;/span&gt; programming&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Set tags in your post:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;tags:&lt;/span&gt;[tag1,tag2,tag3]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;In the head of your post, it may look like this:&lt;/p&gt;
&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;title:&lt;/span&gt; Power your Githup Pages with Hexo&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;author:&lt;/span&gt; zhenv5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;categories:&lt;/span&gt; Tech&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;tags:&lt;/span&gt; [Hexo,Github]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;---&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo is a very powerful blog framework, which can be applied to your own github pages. &lt;/p&gt;
&lt;h3 id=&quot;Requirements&quot;&gt;&lt;a href=&quot;#Requirements&quot;
    
    </summary>
    
      <category term="Tech" scheme="http://zhenv5.github.io/categories/Tech/"/>
    
    
      <category term="Hexo" scheme="http://zhenv5.github.io/tags/Hexo/"/>
    
      <category term="Github" scheme="http://zhenv5.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Matplotlib save fig to pdf</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Matplotlib-savefig-to-pdf/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Matplotlib-savefig-to-pdf/</id>
    <published>2016-09-30T20:23:53.400Z</published>
    <updated>2016-04-20T18:23:56.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Savefig-to-pdf-format&quot;&gt;&lt;a href=&quot;#Savefig-to-pdf-format&quot; class=&quot;headerlink&quot; title=&quot;Savefig to pdf format&quot;&gt;&lt;/a&gt;Savefig to pdf format&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; plt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pandas &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; pd&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scatter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(x, y, alpha  =&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, color = &lt;span class=&quot;string&quot;&gt;&quot;r&quot;&lt;/span&gt;, save_file = &lt;span class=&quot;string&quot;&gt;&quot;scatter_plot&quot;&lt;/span&gt;, format = &lt;span class=&quot;string&quot;&gt;&quot;pdf&quot;&lt;/span&gt;, show = True, grid = False, xlabel = &lt;span class=&quot;string&quot;&gt;&quot;x&quot;&lt;/span&gt;, ylabel = &lt;span class=&quot;string&quot;&gt;&quot;y&quot;&lt;/span&gt;, title = &lt;span class=&quot;string&quot;&gt;&quot;Scatter Plot&quot;&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	input: X, Y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	output: scatter plot&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&#39;&#39;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	fig = plt.Figure()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	fig.set_canvas(plt.gcf().canvas)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	plt.scatter(x,y, alpha=&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;,color = color)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; grid:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		plt.grid(&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	plt.xlabel(xlabel)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	plt.ylabel(ylabel)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	plt.title(title)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; show:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		plt.show()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	fig.savefig(save_file + &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; + format, format = format)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Source File can be viewed at &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/sun-lib/visualize_options.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Savefig-to-pdf-format&quot;&gt;&lt;a href=&quot;#Savefig-to-pdf-format&quot; class=&quot;headerlink&quot; title=&quot;Savefig to pdf format&quot;&gt;&lt;/a&gt;Savefig to pdf format&lt;/
    
    </summary>
    
      <category term="Matplotlib" scheme="http://zhenv5.github.io/categories/Matplotlib/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="Matplotlib" scheme="http://zhenv5.github.io/tags/Matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>subprocess, a Python module can replace shell</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Python-Module-subprocess/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Python-Module-subprocess/</id>
    <published>2016-09-30T20:23:31.192Z</published>
    <updated>2016-02-22T04:51:24.000Z</updated>
    
    <content type="html">&lt;p&gt;The &lt;strong&gt;subprocess&lt;/strong&gt; module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their return codes. This module intends to replace several older modules and functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;os.system&lt;/li&gt;
&lt;li&gt;os.spawn&lt;/li&gt;
&lt;li&gt;os.popen&lt;/li&gt;
&lt;li&gt;popen.2&lt;/li&gt;
&lt;li&gt;commands&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;References&quot;&gt;&lt;a href=&quot;#References&quot; class=&quot;headerlink&quot; title=&quot;References&quot;&gt;&lt;/a&gt;References&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://hackerxu.com/2014/10/09/subprocess.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python subprocess模块总结
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/imzoer/article/details/8678029&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python中subprocess学习&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-26000296-id-4461522.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; python子进程模块subprocess详解与应用实例 之一&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-26000296-id-4461541.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; python子进程模块subprocess详解与应用实例 之二 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-26000296-id-4461555.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; python子进程模块subprocess详解与应用实例 之三 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;strong&gt;subprocess&lt;/strong&gt; module allows you to spawn new processes, connect to their input/output/error pipes, and obtain their ret
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Module" scheme="http://zhenv5.github.io/tags/Module/"/>
    
      <category term="subprocess" scheme="http://zhenv5.github.io/tags/subprocess/"/>
    
  </entry>
  
  <entry>
    <title>String Fromat in Python</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/String-format-in-Python/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/String-format-in-Python/</id>
    <published>2016-09-30T20:23:08.849Z</published>
    <updated>2016-04-21T17:57:18.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;More details can be viewed here: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/string_format_in_python.ipynb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;string format in python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;More details can be viewed here: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/string_format_in_python.ipynb&quot; target=&quot;
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="String" scheme="http://zhenv5.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Python Notebook Jupyter</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Python-Notebook-Jupyter/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Python-Notebook-Jupyter/</id>
    <published>2016-09-30T20:23:08.841Z</published>
    <updated>2016-04-08T18:14:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Why not try Jupyter&lt;/p&gt;
&lt;h4 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h4&gt;&lt;p&gt;Install:&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; jupyter&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Upgrade:&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; -U jupyter&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;figure class=&quot;highlight ebnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;jupyter notebook&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If it reminds you that &lt;em&gt;command not found&lt;/em&gt;, please use below command instead:&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;~/.&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/bin/jupyter-notebook&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The notebook should be started, then use &lt;a href=&quot;http://localhost:8888/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:8888/&lt;/a&gt; to visit the notebook.&lt;/p&gt;
&lt;p&gt;More commands can be viewed at &lt;a href=&quot;http://jupyter.readthedocs.org/en/latest/running.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Runing Jupyter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the home directory Jupyter opens is as same as your working directory in the terminal.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Why not try Jupyter&lt;/p&gt;
&lt;h4 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h4&gt;&lt;p&gt;Install:&lt;/p&gt;
&lt;figure cl
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="Jupyter" scheme="http://zhenv5.github.io/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Configuration</title>
    <link href="http://zhenv5.github.io/2016/09/30/Others/sublime_configuration/"/>
    <id>http://zhenv5.github.io/2016/09/30/Others/sublime_configuration/</id>
    <published>2016-09-30T20:22:19.549Z</published>
    <updated>2016-05-17T07:47:21.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Whitespace&quot;&gt;&lt;a href=&quot;#Whitespace&quot; class=&quot;headerlink&quot; title=&quot;Whitespace&quot;&gt;&lt;/a&gt;Whitespace&lt;/h3&gt;&lt;p&gt;To show all whitespace, in Preferences -&amp;gt; Settings - User, add:&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;draw_white_space&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;all&quot;&lt;/span&gt;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Font-size&quot;&gt;&lt;a href=&quot;#Font-size&quot; class=&quot;headerlink&quot; title=&quot;Font size&quot;&gt;&lt;/a&gt;Font size&lt;/h3&gt;&lt;p&gt;In preferences -&amp;gt; Settings - User, set:&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;font_size&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Whitespace&quot;&gt;&lt;a href=&quot;#Whitespace&quot; class=&quot;headerlink&quot; title=&quot;Whitespace&quot;&gt;&lt;/a&gt;Whitespace&lt;/h3&gt;&lt;p&gt;To show all whitespace, in Preferences
    
    </summary>
    
      <category term="Sublime" scheme="http://zhenv5.github.io/categories/Sublime/"/>
    
    
      <category term="Sublime" scheme="http://zhenv5.github.io/tags/Sublime/"/>
    
  </entry>
  
  <entry>
    <title>Cool Python Modules</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Cool-Python-Modules/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Cool-Python-Modules/</id>
    <published>2016-09-30T20:21:24.490Z</published>
    <updated>2016-02-22T04:46:55.000Z</updated>
    
    <content type="html">&lt;p&gt;Life is short, I use Python.&lt;/p&gt;
&lt;h3 id=&quot;Python-Modules&quot;&gt;&lt;a href=&quot;#Python-Modules&quot; class=&quot;headerlink&quot; title=&quot;Python Modules&quot;&gt;&lt;/a&gt;Python Modules&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/urllib2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;urllib2&lt;/a&gt;: extensible library for opening URLs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tweepy.readthedocs.org/en/v3.5.0/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tweepy&lt;/a&gt;: a easy way to use twitter API&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/subprocess.html#popen-constructor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;subprocess&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/2/library/shlex.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;shlex&lt;/a&gt;: The shlex class makes it easy to write lexical analyzers for simple syntaxes resembling that of the Unix shell&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.scrapy.org/en/latest/#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scrapy&lt;/a&gt;: a framework for crawling web sites.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://networkx.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;networks&lt;/a&gt;: a framework to study social network.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Ref&quot;&gt;&lt;a href=&quot;#Ref&quot; class=&quot;headerlink&quot; title=&quot;Ref&quot;&gt;&lt;/a&gt;Ref&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.quora.com/What-are-the-best-Python-scripts-youve-ever-written&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What are the best Python scripts you’ve ever written?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.linuxeye.com/410.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python多线程抓取代理服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.kuqin.com/shuoit/20150313/345239.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python写爬虫抓站的一些技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/81398/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何使用 urllib 包获取网络资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://seanlin.logdown.com/posts/239883-python-idioms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 慣用語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/82633/?utm_source=group.jobbole.com&amp;amp;utm_medium=relatedArticles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Python 工具列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/83588/?utm_source=group.jobbole.com&amp;amp;utm_medium=relatedArticles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何用 Python 爬取需要登录的网站？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://python.jobbole.com/82000/?utm_source=group.jobbole.com&amp;amp;utm_medium=relatedArticles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用python爬虫抓站的一些技巧总结：进阶篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ranlei.github.io/urllib3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;URLLIB3的抓取问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Life is short, I use Python.&lt;/p&gt;
&lt;h3 id=&quot;Python-Modules&quot;&gt;&lt;a href=&quot;#Python-Modules&quot; class=&quot;headerlink&quot; title=&quot;Python Modules&quot;&gt;&lt;/a&gt;Python M
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Module" scheme="http://zhenv5.github.io/tags/Module/"/>
    
      <category term="urllib2" scheme="http://zhenv5.github.io/tags/urllib2/"/>
    
      <category term="tweepy" scheme="http://zhenv5.github.io/tags/tweepy/"/>
    
      <category term="subprocess" scheme="http://zhenv5.github.io/tags/subprocess/"/>
    
  </entry>
  
  <entry>
    <title>Introduction to Binary Search Tree</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Binary-Search-Tree/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Binary-Search-Tree/</id>
    <published>2016-09-30T20:21:06.226Z</published>
    <updated>2016-02-15T22:13:41.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Binary-Search-Tree&quot;&gt;&lt;a href=&quot;#Binary-Search-Tree&quot; class=&quot;headerlink&quot; title=&quot;Binary Search Tree&quot;&gt;&lt;/a&gt;Binary Search Tree&lt;/h3&gt;&lt;h4 id=&quot;Definition&quot;&gt;&lt;a href=&quot;#Definition&quot; class=&quot;headerlink&quot; title=&quot;Definition&quot;&gt;&lt;/a&gt;Definition&lt;/h4&gt;&lt;p&gt;Binary search tree is a node-based binary tree data structure which has following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The left subtree of a node contains only nodes with keys less than the node’s key&lt;/li&gt;
&lt;li&gt;The right subtree of a node contains only nodes with keys greater than the node’s key&lt;/li&gt;
&lt;li&gt;The left and right subtree each must also be a binary search tree&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Implementation-of-Binary-Search-Tree&quot;&gt;&lt;a href=&quot;#Implementation-of-Binary-Search-Tree&quot; class=&quot;headerlink&quot; title=&quot;Implementation of Binary Search Tree&quot;&gt;&lt;/a&gt;Implementation of Binary Search Tree&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BST&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self,value)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.value = value&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.left = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        self.right = &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(root,key)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; root:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.value == key:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &amp;lt; root.value:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; search(root.left,key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; search(root.right,key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(root,key)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; root:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BST(key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; key &amp;lt; root.value:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.left == &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            root.left = BST(key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            add(root.left,key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; key &amp;gt; root.value:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; root.right == &lt;span class=&quot;keyword&quot;&gt;None&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            root.right = BST(key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            add(root.right,key)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;cannot add a duplicate value&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;printBST&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(root)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; root:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    printBST(root.left)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; root.value&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    printBST(root.right)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;root = BST(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;add(root,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;add(root,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;printBST(root)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Description of Binary Search Tree &lt;a href=&quot;http://geeksquiz.com/binary-search-tree-set-1-search-and-insertion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Search and Insert Operation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Description of Binary Search Tree &lt;a href=&quot;http://geeksquiz.com/binary-search-tree-set-2-delete/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Delete Operation&lt;/a&gt; [Use the minmum value node in the right part to replace current node to be delted, if it has left and right child nodes]&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My Source code can be viewed here: &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/Code/binary_search_tree.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Githup&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;Advantage-of-Binary-Search-Tree&quot;&gt;&lt;a href=&quot;#Advantage-of-Binary-Search-Tree&quot; class=&quot;headerlink&quot; title=&quot;Advantage of Binary Search Tree&quot;&gt;&lt;/a&gt;Advantage of Binary Search Tree&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Search, insert, and delete opreations are O(log(n)).&lt;/li&gt;
&lt;li&gt;Get all keys in sorted order by just doing traversal of BST.&lt;/li&gt;
&lt;li&gt;Doing order statistics, finding closest lower and greater elements, doing range queries are easy to do with BSTs.&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Binary-Search-Tree&quot;&gt;&lt;a href=&quot;#Binary-Search-Tree&quot; class=&quot;headerlink&quot; title=&quot;Binary Search Tree&quot;&gt;&lt;/a&gt;Binary Search Tree&lt;/h3&gt;&lt;h4 id=&quot;D
    
    </summary>
    
      <category term="Programming" scheme="http://zhenv5.github.io/categories/Programming/"/>
    
    
      <category term="Binary Search Tree" scheme="http://zhenv5.github.io/tags/Binary-Search-Tree/"/>
    
  </entry>
  
  <entry>
    <title>Python itertools</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/Python-itertools/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/Python-itertools/</id>
    <published>2016-09-30T20:20:21.179Z</published>
    <updated>2016-03-06T19:36:53.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/itertools.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itertools: functions creating iterators for efficient looping&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Fall into three categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;infinite iterators&lt;/li&gt;
&lt;li&gt;iterators terminating on the shortest input sequence&lt;/li&gt;
&lt;li&gt;combinatoric generators&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;chain&quot;&gt;&lt;a href=&quot;#chain&quot; class=&quot;headerlink&quot; title=&quot;chain&quot;&gt;&lt;/a&gt;chain&lt;/h4&gt;&lt;p&gt;Used for treating consecutive sequence as a single sequence&lt;/p&gt;
&lt;p&gt;Equivalent to:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*iterables)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# use * before iterables to collect all remaining arguments into a tuple&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; it &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; iterables:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;yield&lt;/span&gt; element&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it.chain(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;BCD&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;EFT&quot;&lt;/span&gt;):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; element&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Alternate constructor is &lt;strong&gt;from_iterable&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; it.chain.from_iterable([&lt;span class=&quot;string&quot;&gt;&quot;ABC&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;DEFFFF&quot;&lt;/span&gt;]):&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; element&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;combinations&quot;&gt;&lt;a href=&quot;#combinations&quot; class=&quot;headerlink&quot; title=&quot;combinations&quot;&gt;&lt;/a&gt;combinations&lt;/h4&gt;&lt;p&gt;return r length subsequences of elements from the input iterable&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(iterable,r)&lt;/span&gt;:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; it.combinations(iterable,r)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;c = com([&lt;span class=&quot;string&quot;&gt;&quot;ABC&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;DEF&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;HI&quot;&lt;/span&gt;],&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; ele &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; c:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; ele&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;combinations(‘ABCD’, 2): AB,AC,AD,BC,BD,CD&lt;/li&gt;
&lt;li&gt;combinations_with_replacement(‘ABCD’, 2): AA AB AC AD BB BC BD CC CD DD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More functions such as &lt;strong&gt;compress&lt;/strong&gt;, &lt;strong&gt;groupby&lt;/strong&gt;,&lt;strong&gt;ifilter&lt;/strong&gt;,&lt;strong&gt;izip&lt;/strong&gt;, can be viewed at itertools’ &lt;a href=&quot;https://docs.python.org/2/library/itertools.html#itertools.chain&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recommendation: &lt;a href=&quot;http://www.oschina.net/translate/python-functions&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Useful Python Functions and Features You Need to Know&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://docs.python.org/2/library/itertools.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;itertools: functions creating iterators for eff
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="itertools" scheme="http://zhenv5.github.io/tags/itertools/"/>
    
  </entry>
  
  <entry>
    <title>argparse module in Python</title>
    <link href="http://zhenv5.github.io/2016/09/30/Python/argparse-module/"/>
    <id>http://zhenv5.github.io/2016/09/30/Python/argparse-module/</id>
    <published>2016-09-30T20:19:53.351Z</published>
    <updated>2016-04-01T00:31:41.000Z</updated>
    
    <content type="html">&lt;p&gt;The &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#action&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;argparse&lt;/a&gt; is module in Python used to write user-friendly command-line interface.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;&#39;&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Demo of argparse: Parser for command-line options, arguments and sub-commands&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&#39;&#39;&#39;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; argparse&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; parse = argparse.ArgumentParser(description = &lt;span class=&quot;string&quot;&gt;&quot;Demo of argpase&quot;&lt;/span&gt;,prog = &lt;span class=&quot;string&quot;&gt;&quot;argparse-demo&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; parse.add_argument(&lt;span class=&quot;string&quot;&gt;&quot;-a&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;--aa&quot;&lt;/span&gt;,help = &lt;span class=&quot;string&quot;&gt;&#39;parameter a which is a integer&#39;&lt;/span&gt;,required = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; parse.add_argument(&lt;span class=&quot;string&quot;&gt;&quot;-b&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;--bb&quot;&lt;/span&gt;,help = &lt;span class=&quot;string&quot;&gt;&#39;parameter b which is a boolean&#39;&lt;/span&gt;,required = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;,action = &lt;span class=&quot;string&quot;&gt;&quot;store_true&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; args = parse.parse_args()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.aa&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.bb&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Three steps in using argparse.&lt;/p&gt;
&lt;h4 id=&quot;Creating-a-Parser&quot;&gt;&lt;a href=&quot;#Creating-a-Parser&quot; class=&quot;headerlink&quot; title=&quot;Creating a Parser&quot;&gt;&lt;/a&gt;Creating a Parser&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;parse = argparse.ArgumentParser(description = &lt;span class=&quot;string&quot;&gt;&quot;Demo of argpase&quot;&lt;/span&gt;,prog = &lt;span class=&quot;string&quot;&gt;&quot;argparse-demo&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#prog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;prog&lt;/a&gt;: the name of the program&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.python.org/3/library/argparse.html#description&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;description&lt;/a&gt;: Text to display before the argument help&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Adding-arguments&quot;&gt;&lt;a href=&quot;#Adding-arguments&quot; class=&quot;headerlink&quot; title=&quot;Adding arguments&quot;&gt;&lt;/a&gt;Adding arguments&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;parse.add_argument(&lt;span class=&quot;string&quot;&gt;&quot;-a&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;--aa&quot;&lt;/span&gt;,help = &lt;span class=&quot;string&quot;&gt;&#39;parameter a which is a integer&#39;&lt;/span&gt;,required = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More about the add_argument() method can be viewed at &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#description&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;Parsing-arguments&quot;&gt;&lt;a href=&quot;#Parsing-arguments&quot; class=&quot;headerlink&quot; title=&quot;Parsing arguments&quot;&gt;&lt;/a&gt;Parsing arguments&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;args = parse.parse_args()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.aa&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; args.bb&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;Demo codes can be viewed at &lt;a href=&quot;https://github.com/zhenv5/WayToPython/blob/master/Code/argparser-demo.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EOF&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;a href=&quot;https://docs.python.org/3/library/argparse.html#action&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;argparse&lt;/a&gt; is module in Python used
    
    </summary>
    
      <category term="Python" scheme="http://zhenv5.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="http://zhenv5.github.io/tags/Python/"/>
    
      <category term="argparse" scheme="http://zhenv5.github.io/tags/argparse/"/>
    
  </entry>
  
</feed>
